// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player_match.proto

#ifndef PROTOBUF_player_5fmatch_2eproto__INCLUDED
#define PROTOBUF_player_5fmatch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db_cache.pb.h"
#include "cardsystem.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_player_5fmatch_2eproto();
void protobuf_AssignDesc_player_5fmatch_2eproto();
void protobuf_ShutdownFile_player_5fmatch_2eproto();

class C2S_EnterGameReq;
class S2C_EnterGameRsp;
class C2S_EnterRoomReq;
class S2C_EnterRoomRsp;
class S2C_StartGame;
class GameInfo;
class PlayerInfo;
class RoomInfo;
class AllPlayerInfo;
class C2S_SetEnterFlagReq;
class S2C_SetEnterFlagRsp;
class S2C_NotifyPlayerEnter;
class C2S_GameReadReq;
class S2C_GameReadRsp;
class S2C_NotifyPlayerRead;
class C2S_SetSeatStateReq;
class S2C_NotifySeatState;
class S2C_TickOut;
class S2C_ShowStartGameBtn;
class S2C_HostChange;
class S2C_NotifyGameInfoChange;
class C2S_LeaveRoomReq;
class S2C_NotifyPlayerLeave;
class C2S_Invite_Player_Req;
class S2C_Invite_Player_Rsp;
class S2C_Notify_Invitee;
class C2S_Invitee_Reply;
class S2C_Invitation_Result;

enum C2S_EnterRoomReq_EnterWayType {
  C2S_EnterRoomReq_EnterWayType_MATCHROOM = 0,
  C2S_EnterRoomReq_EnterWayType_CREATEROOM = 1,
  C2S_EnterRoomReq_EnterWayType_INVITATION = 2
};
bool C2S_EnterRoomReq_EnterWayType_IsValid(int value);
const C2S_EnterRoomReq_EnterWayType C2S_EnterRoomReq_EnterWayType_EnterWayType_MIN = C2S_EnterRoomReq_EnterWayType_MATCHROOM;
const C2S_EnterRoomReq_EnterWayType C2S_EnterRoomReq_EnterWayType_EnterWayType_MAX = C2S_EnterRoomReq_EnterWayType_INVITATION;
const int C2S_EnterRoomReq_EnterWayType_EnterWayType_ARRAYSIZE = C2S_EnterRoomReq_EnterWayType_EnterWayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* C2S_EnterRoomReq_EnterWayType_descriptor();
inline const ::std::string& C2S_EnterRoomReq_EnterWayType_Name(C2S_EnterRoomReq_EnterWayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    C2S_EnterRoomReq_EnterWayType_descriptor(), value);
}
inline bool C2S_EnterRoomReq_EnterWayType_Parse(
    const ::std::string& name, C2S_EnterRoomReq_EnterWayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<C2S_EnterRoomReq_EnterWayType>(
    C2S_EnterRoomReq_EnterWayType_descriptor(), name, value);
}
enum C2S_Invitee_Reply_ReplyCode {
  C2S_Invitee_Reply_ReplyCode_ACCEPT = 0,
  C2S_Invitee_Reply_ReplyCode_REJECT = 1
};
bool C2S_Invitee_Reply_ReplyCode_IsValid(int value);
const C2S_Invitee_Reply_ReplyCode C2S_Invitee_Reply_ReplyCode_ReplyCode_MIN = C2S_Invitee_Reply_ReplyCode_ACCEPT;
const C2S_Invitee_Reply_ReplyCode C2S_Invitee_Reply_ReplyCode_ReplyCode_MAX = C2S_Invitee_Reply_ReplyCode_REJECT;
const int C2S_Invitee_Reply_ReplyCode_ReplyCode_ARRAYSIZE = C2S_Invitee_Reply_ReplyCode_ReplyCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* C2S_Invitee_Reply_ReplyCode_descriptor();
inline const ::std::string& C2S_Invitee_Reply_ReplyCode_Name(C2S_Invitee_Reply_ReplyCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    C2S_Invitee_Reply_ReplyCode_descriptor(), value);
}
inline bool C2S_Invitee_Reply_ReplyCode_Parse(
    const ::std::string& name, C2S_Invitee_Reply_ReplyCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<C2S_Invitee_Reply_ReplyCode>(
    C2S_Invitee_Reply_ReplyCode_descriptor(), name, value);
}
enum S2C_Invitation_Result_InviteResult {
  S2C_Invitation_Result_InviteResult_SUCCESS = 0,
  S2C_Invitation_Result_InviteResult_FAILED = 1
};
bool S2C_Invitation_Result_InviteResult_IsValid(int value);
const S2C_Invitation_Result_InviteResult S2C_Invitation_Result_InviteResult_InviteResult_MIN = S2C_Invitation_Result_InviteResult_SUCCESS;
const S2C_Invitation_Result_InviteResult S2C_Invitation_Result_InviteResult_InviteResult_MAX = S2C_Invitation_Result_InviteResult_FAILED;
const int S2C_Invitation_Result_InviteResult_InviteResult_ARRAYSIZE = S2C_Invitation_Result_InviteResult_InviteResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* S2C_Invitation_Result_InviteResult_descriptor();
inline const ::std::string& S2C_Invitation_Result_InviteResult_Name(S2C_Invitation_Result_InviteResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    S2C_Invitation_Result_InviteResult_descriptor(), value);
}
inline bool S2C_Invitation_Result_InviteResult_Parse(
    const ::std::string& name, S2C_Invitation_Result_InviteResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<S2C_Invitation_Result_InviteResult>(
    S2C_Invitation_Result_InviteResult_descriptor(), name, value);
}
// ===================================================================

class C2S_EnterGameReq : public ::google::protobuf::Message {
 public:
  C2S_EnterGameReq();
  virtual ~C2S_EnterGameReq();

  C2S_EnterGameReq(const C2S_EnterGameReq& from);

  inline C2S_EnterGameReq& operator=(const C2S_EnterGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_EnterGameReq& default_instance();

  void Swap(C2S_EnterGameReq* other);

  // implements Message ----------------------------------------------

  C2S_EnterGameReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_EnterGameReq& from);
  void MergeFrom(const C2S_EnterGameReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 gamesvr_type = 1;
  inline bool has_gamesvr_type() const;
  inline void clear_gamesvr_type();
  static const int kGamesvrTypeFieldNumber = 1;
  inline ::google::protobuf::int32 gamesvr_type() const;
  inline void set_gamesvr_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_EnterGameReq)
 private:
  inline void set_has_gamesvr_type();
  inline void clear_has_gamesvr_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gamesvr_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_EnterGameReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_EnterGameRsp : public ::google::protobuf::Message {
 public:
  S2C_EnterGameRsp();
  virtual ~S2C_EnterGameRsp();

  S2C_EnterGameRsp(const S2C_EnterGameRsp& from);

  inline S2C_EnterGameRsp& operator=(const S2C_EnterGameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_EnterGameRsp& default_instance();

  void Swap(S2C_EnterGameRsp* other);

  // implements Message ----------------------------------------------

  S2C_EnterGameRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_EnterGameRsp& from);
  void MergeFrom(const S2C_EnterGameRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_EnterGameRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_EnterGameRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_EnterRoomReq : public ::google::protobuf::Message {
 public:
  C2S_EnterRoomReq();
  virtual ~C2S_EnterRoomReq();

  C2S_EnterRoomReq(const C2S_EnterRoomReq& from);

  inline C2S_EnterRoomReq& operator=(const C2S_EnterRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_EnterRoomReq& default_instance();

  void Swap(C2S_EnterRoomReq* other);

  // implements Message ----------------------------------------------

  C2S_EnterRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_EnterRoomReq& from);
  void MergeFrom(const C2S_EnterRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef C2S_EnterRoomReq_EnterWayType EnterWayType;
  static const EnterWayType MATCHROOM = C2S_EnterRoomReq_EnterWayType_MATCHROOM;
  static const EnterWayType CREATEROOM = C2S_EnterRoomReq_EnterWayType_CREATEROOM;
  static const EnterWayType INVITATION = C2S_EnterRoomReq_EnterWayType_INVITATION;
  static inline bool EnterWayType_IsValid(int value) {
    return C2S_EnterRoomReq_EnterWayType_IsValid(value);
  }
  static const EnterWayType EnterWayType_MIN =
    C2S_EnterRoomReq_EnterWayType_EnterWayType_MIN;
  static const EnterWayType EnterWayType_MAX =
    C2S_EnterRoomReq_EnterWayType_EnterWayType_MAX;
  static const int EnterWayType_ARRAYSIZE =
    C2S_EnterRoomReq_EnterWayType_EnterWayType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnterWayType_descriptor() {
    return C2S_EnterRoomReq_EnterWayType_descriptor();
  }
  static inline const ::std::string& EnterWayType_Name(EnterWayType value) {
    return C2S_EnterRoomReq_EnterWayType_Name(value);
  }
  static inline bool EnterWayType_Parse(const ::std::string& name,
      EnterWayType* value) {
    return C2S_EnterRoomReq_EnterWayType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 enter_way = 2;
  inline bool has_enter_way() const;
  inline void clear_enter_way();
  static const int kEnterWayFieldNumber = 2;
  inline ::google::protobuf::int32 enter_way() const;
  inline void set_enter_way(::google::protobuf::int32 value);

  // required int32 game_model = 3;
  inline bool has_game_model() const;
  inline void clear_game_model();
  static const int kGameModelFieldNumber = 3;
  inline ::google::protobuf::int32 game_model() const;
  inline void set_game_model(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_EnterRoomReq)
 private:
  inline void set_has_enter_way();
  inline void clear_has_enter_way();
  inline void set_has_game_model();
  inline void clear_has_game_model();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 enter_way_;
  ::google::protobuf::int32 game_model_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_EnterRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_EnterRoomRsp : public ::google::protobuf::Message {
 public:
  S2C_EnterRoomRsp();
  virtual ~S2C_EnterRoomRsp();

  S2C_EnterRoomRsp(const S2C_EnterRoomRsp& from);

  inline S2C_EnterRoomRsp& operator=(const S2C_EnterRoomRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_EnterRoomRsp& default_instance();

  void Swap(S2C_EnterRoomRsp* other);

  // implements Message ----------------------------------------------

  S2C_EnterRoomRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_EnterRoomRsp& from);
  void MergeFrom(const S2C_EnterRoomRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional int32 room_id = 2;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 seat_no = 3;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 3;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // optional int32 host_no = 4;
  inline bool has_host_no() const;
  inline void clear_host_no();
  static const int kHostNoFieldNumber = 4;
  inline ::google::protobuf::int32 host_no() const;
  inline void set_host_no(::google::protobuf::int32 value);

  // repeated int32 lock_seat = 5;
  inline int lock_seat_size() const;
  inline void clear_lock_seat();
  static const int kLockSeatFieldNumber = 5;
  inline ::google::protobuf::int32 lock_seat(int index) const;
  inline void set_lock_seat(int index, ::google::protobuf::int32 value);
  inline void add_lock_seat(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lock_seat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lock_seat();

  // optional int32 enter_way = 6;
  inline bool has_enter_way() const;
  inline void clear_enter_way();
  static const int kEnterWayFieldNumber = 6;
  inline ::google::protobuf::int32 enter_way() const;
  inline void set_enter_way(::google::protobuf::int32 value);

  // optional int32 game_model = 7;
  inline bool has_game_model() const;
  inline void clear_game_model();
  static const int kGameModelFieldNumber = 7;
  inline ::google::protobuf::int32 game_model() const;
  inline void set_game_model(::google::protobuf::int32 value);

  // optional .AllPlayerInfo player_info = 8;
  inline bool has_player_info() const;
  inline void clear_player_info();
  static const int kPlayerInfoFieldNumber = 8;
  inline const ::AllPlayerInfo& player_info() const;
  inline ::AllPlayerInfo* mutable_player_info();
  inline ::AllPlayerInfo* release_player_info();
  inline void set_allocated_player_info(::AllPlayerInfo* player_info);

  // @@protoc_insertion_point(class_scope:S2C_EnterRoomRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_host_no();
  inline void clear_has_host_no();
  inline void set_has_enter_way();
  inline void clear_has_enter_way();
  inline void set_has_game_model();
  inline void clear_has_game_model();
  inline void set_has_player_info();
  inline void clear_has_player_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 seat_no_;
  ::google::protobuf::int32 host_no_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lock_seat_;
  ::google::protobuf::int32 enter_way_;
  ::google::protobuf::int32 game_model_;
  ::AllPlayerInfo* player_info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_EnterRoomRsp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_StartGame : public ::google::protobuf::Message {
 public:
  S2C_StartGame();
  virtual ~S2C_StartGame();

  S2C_StartGame(const S2C_StartGame& from);

  inline S2C_StartGame& operator=(const S2C_StartGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_StartGame& default_instance();

  void Swap(S2C_StartGame* other);

  // implements Message ----------------------------------------------

  S2C_StartGame* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_StartGame& from);
  void MergeFrom(const S2C_StartGame& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cost_energy = 1;
  inline bool has_cost_energy() const;
  inline void clear_cost_energy();
  static const int kCostEnergyFieldNumber = 1;
  inline ::google::protobuf::int32 cost_energy() const;
  inline void set_cost_energy(::google::protobuf::int32 value);

  // optional int32 cost_ticket = 2;
  inline bool has_cost_ticket() const;
  inline void clear_cost_ticket();
  static const int kCostTicketFieldNumber = 2;
  inline ::google::protobuf::int32 cost_ticket() const;
  inline void set_cost_ticket(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_StartGame)
 private:
  inline void set_has_cost_energy();
  inline void clear_has_cost_energy();
  inline void set_has_cost_ticket();
  inline void clear_has_cost_ticket();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cost_energy_;
  ::google::protobuf::int32 cost_ticket_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_StartGame* default_instance_;
};
// -------------------------------------------------------------------

class GameInfo : public ::google::protobuf::Message {
 public:
  GameInfo();
  virtual ~GameInfo();

  GameInfo(const GameInfo& from);

  inline GameInfo& operator=(const GameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameInfo& default_instance();

  void Swap(GameInfo* other);

  // implements Message ----------------------------------------------

  GameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GameInfo& from);
  void MergeFrom(const GameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gameCoin = 1;
  inline bool has_gamecoin() const;
  inline void clear_gamecoin();
  static const int kGameCoinFieldNumber = 1;
  inline ::google::protobuf::int32 gamecoin() const;
  inline void set_gamecoin(::google::protobuf::int32 value);

  // optional int32 status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 seat_no = 3;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 3;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // optional int32 color = 4;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 4;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);

  // optional int32 curr_posi = 5;
  inline bool has_curr_posi() const;
  inline void clear_curr_posi();
  static const int kCurrPosiFieldNumber = 5;
  inline ::google::protobuf::int32 curr_posi() const;
  inline void set_curr_posi(::google::protobuf::int32 value);

  // optional int32 rand_card_id = 6;
  inline bool has_rand_card_id() const;
  inline void clear_rand_card_id();
  static const int kRandCardIdFieldNumber = 6;
  inline ::google::protobuf::int32 rand_card_id() const;
  inline void set_rand_card_id(::google::protobuf::int32 value);

  // optional int32 equipment = 7;
  inline bool has_equipment() const;
  inline void clear_equipment();
  static const int kEquipmentFieldNumber = 7;
  inline ::google::protobuf::int32 equipment() const;
  inline void set_equipment(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameInfo)
 private:
  inline void set_has_gamecoin();
  inline void clear_has_gamecoin();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_curr_posi();
  inline void clear_has_curr_posi();
  inline void set_has_rand_card_id();
  inline void clear_has_rand_card_id();
  inline void set_has_equipment();
  inline void clear_has_equipment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 gamecoin_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 seat_no_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 curr_posi_;
  ::google::protobuf::int32 rand_card_id_;
  ::google::protobuf::int32 equipment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static GameInfo* default_instance_;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  void Swap(PlayerInfo* other);

  // implements Message ----------------------------------------------

  PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .DBCACHE.PlayerBaseInfo baseinfo = 1;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 1;
  inline const ::DBCACHE::PlayerBaseInfo& baseinfo() const;
  inline ::DBCACHE::PlayerBaseInfo* mutable_baseinfo();
  inline ::DBCACHE::PlayerBaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::DBCACHE::PlayerBaseInfo* baseinfo);

  // required .CARDSYSTEM.PlayerCardInfo card_property = 2;
  inline bool has_card_property() const;
  inline void clear_card_property();
  static const int kCardPropertyFieldNumber = 2;
  inline const ::CARDSYSTEM::PlayerCardInfo& card_property() const;
  inline ::CARDSYSTEM::PlayerCardInfo* mutable_card_property();
  inline ::CARDSYSTEM::PlayerCardInfo* release_card_property();
  inline void set_allocated_card_property(::CARDSYSTEM::PlayerCardInfo* card_property);

  // required .GameInfo gameinfo = 3;
  inline bool has_gameinfo() const;
  inline void clear_gameinfo();
  static const int kGameinfoFieldNumber = 3;
  inline const ::GameInfo& gameinfo() const;
  inline ::GameInfo* mutable_gameinfo();
  inline ::GameInfo* release_gameinfo();
  inline void set_allocated_gameinfo(::GameInfo* gameinfo);

  // @@protoc_insertion_point(class_scope:PlayerInfo)
 private:
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_card_property();
  inline void clear_has_card_property();
  inline void set_has_gameinfo();
  inline void clear_has_gameinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBCACHE::PlayerBaseInfo* baseinfo_;
  ::CARDSYSTEM::PlayerCardInfo* card_property_;
  ::GameInfo* gameinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoomInfo : public ::google::protobuf::Message {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  RoomInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 room_id = 1;
  inline bool has_room_id() const;
  inline void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  inline ::google::protobuf::int32 room_id() const;
  inline void set_room_id(::google::protobuf::int32 value);

  // optional int32 seat_no = 2;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 2;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // optional int32 host_no = 3;
  inline bool has_host_no() const;
  inline void clear_host_no();
  static const int kHostNoFieldNumber = 3;
  inline ::google::protobuf::int32 host_no() const;
  inline void set_host_no(::google::protobuf::int32 value);

  // repeated int32 lock_seat = 4;
  inline int lock_seat_size() const;
  inline void clear_lock_seat();
  static const int kLockSeatFieldNumber = 4;
  inline ::google::protobuf::int32 lock_seat(int index) const;
  inline void set_lock_seat(int index, ::google::protobuf::int32 value);
  inline void add_lock_seat(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      lock_seat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_lock_seat();

  // optional int32 room_type = 5;
  inline bool has_room_type() const;
  inline void clear_room_type();
  static const int kRoomTypeFieldNumber = 5;
  inline ::google::protobuf::int32 room_type() const;
  inline void set_room_type(::google::protobuf::int32 value);

  // optional int32 room_model = 6;
  inline bool has_room_model() const;
  inline void clear_room_model();
  static const int kRoomModelFieldNumber = 6;
  inline ::google::protobuf::int32 room_model() const;
  inline void set_room_model(::google::protobuf::int32 value);

  // optional int32 left_round = 7;
  inline bool has_left_round() const;
  inline void clear_left_round();
  static const int kLeftRoundFieldNumber = 7;
  inline ::google::protobuf::int32 left_round() const;
  inline void set_left_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoomInfo)
 private:
  inline void set_has_room_id();
  inline void clear_has_room_id();
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_host_no();
  inline void clear_has_host_no();
  inline void set_has_room_type();
  inline void clear_has_room_type();
  inline void set_has_room_model();
  inline void clear_has_room_model();
  inline void set_has_left_round();
  inline void clear_has_left_round();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 room_id_;
  ::google::protobuf::int32 seat_no_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > lock_seat_;
  ::google::protobuf::int32 host_no_;
  ::google::protobuf::int32 room_type_;
  ::google::protobuf::int32 room_model_;
  ::google::protobuf::int32 left_round_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static RoomInfo* default_instance_;
};
// -------------------------------------------------------------------

class AllPlayerInfo : public ::google::protobuf::Message {
 public:
  AllPlayerInfo();
  virtual ~AllPlayerInfo();

  AllPlayerInfo(const AllPlayerInfo& from);

  inline AllPlayerInfo& operator=(const AllPlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllPlayerInfo& default_instance();

  void Swap(AllPlayerInfo* other);

  // implements Message ----------------------------------------------

  AllPlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllPlayerInfo& from);
  void MergeFrom(const AllPlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PlayerInfo info = 1;
  inline int info_size() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 1;
  inline const ::PlayerInfo& info(int index) const;
  inline ::PlayerInfo* mutable_info(int index);
  inline ::PlayerInfo* add_info();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >&
      info() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >*
      mutable_info();

  // @@protoc_insertion_point(class_scope:AllPlayerInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PlayerInfo > info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static AllPlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class C2S_SetEnterFlagReq : public ::google::protobuf::Message {
 public:
  C2S_SetEnterFlagReq();
  virtual ~C2S_SetEnterFlagReq();

  C2S_SetEnterFlagReq(const C2S_SetEnterFlagReq& from);

  inline C2S_SetEnterFlagReq& operator=(const C2S_SetEnterFlagReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_SetEnterFlagReq& default_instance();

  void Swap(C2S_SetEnterFlagReq* other);

  // implements Message ----------------------------------------------

  C2S_SetEnterFlagReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_SetEnterFlagReq& from);
  void MergeFrom(const C2S_SetEnterFlagReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:C2S_SetEnterFlagReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_SetEnterFlagReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_SetEnterFlagRsp : public ::google::protobuf::Message {
 public:
  S2C_SetEnterFlagRsp();
  virtual ~S2C_SetEnterFlagRsp();

  S2C_SetEnterFlagRsp(const S2C_SetEnterFlagRsp& from);

  inline S2C_SetEnterFlagRsp& operator=(const S2C_SetEnterFlagRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_SetEnterFlagRsp& default_instance();

  void Swap(S2C_SetEnterFlagRsp* other);

  // implements Message ----------------------------------------------

  S2C_SetEnterFlagRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_SetEnterFlagRsp& from);
  void MergeFrom(const S2C_SetEnterFlagRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_SetEnterFlagRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_SetEnterFlagRsp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NotifyPlayerEnter : public ::google::protobuf::Message {
 public:
  S2C_NotifyPlayerEnter();
  virtual ~S2C_NotifyPlayerEnter();

  S2C_NotifyPlayerEnter(const S2C_NotifyPlayerEnter& from);

  inline S2C_NotifyPlayerEnter& operator=(const S2C_NotifyPlayerEnter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NotifyPlayerEnter& default_instance();

  void Swap(S2C_NotifyPlayerEnter* other);

  // implements Message ----------------------------------------------

  S2C_NotifyPlayerEnter* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NotifyPlayerEnter& from);
  void MergeFrom(const S2C_NotifyPlayerEnter& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .PlayerInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::PlayerInfo& info() const;
  inline ::PlayerInfo* mutable_info();
  inline ::PlayerInfo* release_info();
  inline void set_allocated_info(::PlayerInfo* info);

  // @@protoc_insertion_point(class_scope:S2C_NotifyPlayerEnter)
 private:
  inline void set_has_info();
  inline void clear_has_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::PlayerInfo* info_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_NotifyPlayerEnter* default_instance_;
};
// -------------------------------------------------------------------

class C2S_GameReadReq : public ::google::protobuf::Message {
 public:
  C2S_GameReadReq();
  virtual ~C2S_GameReadReq();

  C2S_GameReadReq(const C2S_GameReadReq& from);

  inline C2S_GameReadReq& operator=(const C2S_GameReadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_GameReadReq& default_instance();

  void Swap(C2S_GameReadReq* other);

  // implements Message ----------------------------------------------

  C2S_GameReadReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_GameReadReq& from);
  void MergeFrom(const C2S_GameReadReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 action = 1;
  inline bool has_action() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline ::google::protobuf::int32 action() const;
  inline void set_action(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_GameReadReq)
 private:
  inline void set_has_action();
  inline void clear_has_action();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 action_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_GameReadReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_GameReadRsp : public ::google::protobuf::Message {
 public:
  S2C_GameReadRsp();
  virtual ~S2C_GameReadRsp();

  S2C_GameReadRsp(const S2C_GameReadRsp& from);

  inline S2C_GameReadRsp& operator=(const S2C_GameReadRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_GameReadRsp& default_instance();

  void Swap(S2C_GameReadRsp* other);

  // implements Message ----------------------------------------------

  S2C_GameReadRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_GameReadRsp& from);
  void MergeFrom(const S2C_GameReadRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_GameReadRsp)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_GameReadRsp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NotifyPlayerRead : public ::google::protobuf::Message {
 public:
  S2C_NotifyPlayerRead();
  virtual ~S2C_NotifyPlayerRead();

  S2C_NotifyPlayerRead(const S2C_NotifyPlayerRead& from);

  inline S2C_NotifyPlayerRead& operator=(const S2C_NotifyPlayerRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NotifyPlayerRead& default_instance();

  void Swap(S2C_NotifyPlayerRead* other);

  // implements Message ----------------------------------------------

  S2C_NotifyPlayerRead* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NotifyPlayerRead& from);
  void MergeFrom(const S2C_NotifyPlayerRead& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);

  // required int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_NotifyPlayerRead)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 role_id_;
  ::google::protobuf::int32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_NotifyPlayerRead* default_instance_;
};
// -------------------------------------------------------------------

class C2S_SetSeatStateReq : public ::google::protobuf::Message {
 public:
  C2S_SetSeatStateReq();
  virtual ~C2S_SetSeatStateReq();

  C2S_SetSeatStateReq(const C2S_SetSeatStateReq& from);

  inline C2S_SetSeatStateReq& operator=(const C2S_SetSeatStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_SetSeatStateReq& default_instance();

  void Swap(C2S_SetSeatStateReq* other);

  // implements Message ----------------------------------------------

  C2S_SetSeatStateReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_SetSeatStateReq& from);
  void MergeFrom(const C2S_SetSeatStateReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat_no = 1;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 1;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // required int32 seat_state = 2;
  inline bool has_seat_state() const;
  inline void clear_seat_state();
  static const int kSeatStateFieldNumber = 2;
  inline ::google::protobuf::int32 seat_state() const;
  inline void set_seat_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_SetSeatStateReq)
 private:
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_seat_state();
  inline void clear_has_seat_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_no_;
  ::google::protobuf::int32 seat_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_SetSeatStateReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NotifySeatState : public ::google::protobuf::Message {
 public:
  S2C_NotifySeatState();
  virtual ~S2C_NotifySeatState();

  S2C_NotifySeatState(const S2C_NotifySeatState& from);

  inline S2C_NotifySeatState& operator=(const S2C_NotifySeatState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NotifySeatState& default_instance();

  void Swap(S2C_NotifySeatState* other);

  // implements Message ----------------------------------------------

  S2C_NotifySeatState* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NotifySeatState& from);
  void MergeFrom(const S2C_NotifySeatState& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat_no = 1;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 1;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // required int32 seat_state = 2;
  inline bool has_seat_state() const;
  inline void clear_seat_state();
  static const int kSeatStateFieldNumber = 2;
  inline ::google::protobuf::int32 seat_state() const;
  inline void set_seat_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_NotifySeatState)
 private:
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_seat_state();
  inline void clear_has_seat_state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 seat_no_;
  ::google::protobuf::int32 seat_state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_NotifySeatState* default_instance_;
};
// -------------------------------------------------------------------

class S2C_TickOut : public ::google::protobuf::Message {
 public:
  S2C_TickOut();
  virtual ~S2C_TickOut();

  S2C_TickOut(const S2C_TickOut& from);

  inline S2C_TickOut& operator=(const S2C_TickOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_TickOut& default_instance();

  void Swap(S2C_TickOut* other);

  // implements Message ----------------------------------------------

  S2C_TickOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_TickOut& from);
  void MergeFrom(const S2C_TickOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_TickOut)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_TickOut* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ShowStartGameBtn : public ::google::protobuf::Message {
 public:
  S2C_ShowStartGameBtn();
  virtual ~S2C_ShowStartGameBtn();

  S2C_ShowStartGameBtn(const S2C_ShowStartGameBtn& from);

  inline S2C_ShowStartGameBtn& operator=(const S2C_ShowStartGameBtn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ShowStartGameBtn& default_instance();

  void Swap(S2C_ShowStartGameBtn* other);

  // implements Message ----------------------------------------------

  S2C_ShowStartGameBtn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ShowStartGameBtn& from);
  void MergeFrom(const S2C_ShowStartGameBtn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 flag = 1;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 1;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_ShowStartGameBtn)
 private:
  inline void set_has_flag();
  inline void clear_has_flag();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 flag_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_ShowStartGameBtn* default_instance_;
};
// -------------------------------------------------------------------

class S2C_HostChange : public ::google::protobuf::Message {
 public:
  S2C_HostChange();
  virtual ~S2C_HostChange();

  S2C_HostChange(const S2C_HostChange& from);

  inline S2C_HostChange& operator=(const S2C_HostChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_HostChange& default_instance();

  void Swap(S2C_HostChange* other);

  // implements Message ----------------------------------------------

  S2C_HostChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_HostChange& from);
  void MergeFrom(const S2C_HostChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 host_no = 1;
  inline bool has_host_no() const;
  inline void clear_host_no();
  static const int kHostNoFieldNumber = 1;
  inline ::google::protobuf::int32 host_no() const;
  inline void set_host_no(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_HostChange)
 private:
  inline void set_has_host_no();
  inline void clear_has_host_no();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 host_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_HostChange* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NotifyGameInfoChange : public ::google::protobuf::Message {
 public:
  S2C_NotifyGameInfoChange();
  virtual ~S2C_NotifyGameInfoChange();

  S2C_NotifyGameInfoChange(const S2C_NotifyGameInfoChange& from);

  inline S2C_NotifyGameInfoChange& operator=(const S2C_NotifyGameInfoChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NotifyGameInfoChange& default_instance();

  void Swap(S2C_NotifyGameInfoChange* other);

  // implements Message ----------------------------------------------

  S2C_NotifyGameInfoChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NotifyGameInfoChange& from);
  void MergeFrom(const S2C_NotifyGameInfoChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 seat_no = 1;
  inline bool has_seat_no() const;
  inline void clear_seat_no();
  static const int kSeatNoFieldNumber = 1;
  inline ::google::protobuf::int32 seat_no() const;
  inline void set_seat_no(::google::protobuf::int32 value);

  // required .GameInfo game_info = 2;
  inline bool has_game_info() const;
  inline void clear_game_info();
  static const int kGameInfoFieldNumber = 2;
  inline const ::GameInfo& game_info() const;
  inline ::GameInfo* mutable_game_info();
  inline ::GameInfo* release_game_info();
  inline void set_allocated_game_info(::GameInfo* game_info);

  // @@protoc_insertion_point(class_scope:S2C_NotifyGameInfoChange)
 private:
  inline void set_has_seat_no();
  inline void clear_has_seat_no();
  inline void set_has_game_info();
  inline void clear_has_game_info();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GameInfo* game_info_;
  ::google::protobuf::int32 seat_no_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_NotifyGameInfoChange* default_instance_;
};
// -------------------------------------------------------------------

class C2S_LeaveRoomReq : public ::google::protobuf::Message {
 public:
  C2S_LeaveRoomReq();
  virtual ~C2S_LeaveRoomReq();

  C2S_LeaveRoomReq(const C2S_LeaveRoomReq& from);

  inline C2S_LeaveRoomReq& operator=(const C2S_LeaveRoomReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_LeaveRoomReq& default_instance();

  void Swap(C2S_LeaveRoomReq* other);

  // implements Message ----------------------------------------------

  C2S_LeaveRoomReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_LeaveRoomReq& from);
  void MergeFrom(const C2S_LeaveRoomReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:C2S_LeaveRoomReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_LeaveRoomReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_NotifyPlayerLeave : public ::google::protobuf::Message {
 public:
  S2C_NotifyPlayerLeave();
  virtual ~S2C_NotifyPlayerLeave();

  S2C_NotifyPlayerLeave(const S2C_NotifyPlayerLeave& from);

  inline S2C_NotifyPlayerLeave& operator=(const S2C_NotifyPlayerLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_NotifyPlayerLeave& default_instance();

  void Swap(S2C_NotifyPlayerLeave* other);

  // implements Message ----------------------------------------------

  S2C_NotifyPlayerLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_NotifyPlayerLeave& from);
  void MergeFrom(const S2C_NotifyPlayerLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 role_id = 1;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 role_id() const;
  inline void set_role_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_NotifyPlayerLeave)
 private:
  inline void set_has_role_id();
  inline void clear_has_role_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 role_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_NotifyPlayerLeave* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Invite_Player_Req : public ::google::protobuf::Message {
 public:
  C2S_Invite_Player_Req();
  virtual ~C2S_Invite_Player_Req();

  C2S_Invite_Player_Req(const C2S_Invite_Player_Req& from);

  inline C2S_Invite_Player_Req& operator=(const C2S_Invite_Player_Req& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Invite_Player_Req& default_instance();

  void Swap(C2S_Invite_Player_Req* other);

  // implements Message ----------------------------------------------

  C2S_Invite_Player_Req* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Invite_Player_Req& from);
  void MergeFrom(const C2S_Invite_Player_Req& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 invitee = 1;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 1;
  inline ::google::protobuf::int32 invitee() const;
  inline void set_invitee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Invite_Player_Req)
 private:
  inline void set_has_invitee();
  inline void clear_has_invitee();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 invitee_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_Invite_Player_Req* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Invite_Player_Rsp : public ::google::protobuf::Message {
 public:
  S2C_Invite_Player_Rsp();
  virtual ~S2C_Invite_Player_Rsp();

  S2C_Invite_Player_Rsp(const S2C_Invite_Player_Rsp& from);

  inline S2C_Invite_Player_Rsp& operator=(const S2C_Invite_Player_Rsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Invite_Player_Rsp& default_instance();

  void Swap(S2C_Invite_Player_Rsp* other);

  // implements Message ----------------------------------------------

  S2C_Invite_Player_Rsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Invite_Player_Rsp& from);
  void MergeFrom(const S2C_Invite_Player_Rsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // required int32 invitee = 2;
  inline bool has_invitee() const;
  inline void clear_invitee();
  static const int kInviteeFieldNumber = 2;
  inline ::google::protobuf::int32 invitee() const;
  inline void set_invitee(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_Invite_Player_Rsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_invitee();
  inline void clear_has_invitee();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::int32 invitee_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_Invite_Player_Rsp* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Notify_Invitee : public ::google::protobuf::Message {
 public:
  S2C_Notify_Invitee();
  virtual ~S2C_Notify_Invitee();

  S2C_Notify_Invitee(const S2C_Notify_Invitee& from);

  inline S2C_Notify_Invitee& operator=(const S2C_Notify_Invitee& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Notify_Invitee& default_instance();

  void Swap(S2C_Notify_Invitee* other);

  // implements Message ----------------------------------------------

  S2C_Notify_Invitee* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Notify_Invitee& from);
  void MergeFrom(const S2C_Notify_Invitee& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 serial = 1;
  inline bool has_serial() const;
  inline void clear_serial();
  static const int kSerialFieldNumber = 1;
  inline ::google::protobuf::int32 serial() const;
  inline void set_serial(::google::protobuf::int32 value);

  // optional int32 inviter_id = 2;
  inline bool has_inviter_id() const;
  inline void clear_inviter_id();
  static const int kInviterIdFieldNumber = 2;
  inline ::google::protobuf::int32 inviter_id() const;
  inline void set_inviter_id(::google::protobuf::int32 value);

  // optional bytes inviter_name = 3;
  inline bool has_inviter_name() const;
  inline void clear_inviter_name();
  static const int kInviterNameFieldNumber = 3;
  inline const ::std::string& inviter_name() const;
  inline void set_inviter_name(const ::std::string& value);
  inline void set_inviter_name(const char* value);
  inline void set_inviter_name(const void* value, size_t size);
  inline ::std::string* mutable_inviter_name();
  inline ::std::string* release_inviter_name();
  inline void set_allocated_inviter_name(::std::string* inviter_name);

  // @@protoc_insertion_point(class_scope:S2C_Notify_Invitee)
 private:
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_inviter_id();
  inline void clear_has_inviter_id();
  inline void set_has_inviter_name();
  inline void clear_has_inviter_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serial_;
  ::google::protobuf::int32 inviter_id_;
  ::std::string* inviter_name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_Notify_Invitee* default_instance_;
};
// -------------------------------------------------------------------

class C2S_Invitee_Reply : public ::google::protobuf::Message {
 public:
  C2S_Invitee_Reply();
  virtual ~C2S_Invitee_Reply();

  C2S_Invitee_Reply(const C2S_Invitee_Reply& from);

  inline C2S_Invitee_Reply& operator=(const C2S_Invitee_Reply& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_Invitee_Reply& default_instance();

  void Swap(C2S_Invitee_Reply* other);

  // implements Message ----------------------------------------------

  C2S_Invitee_Reply* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_Invitee_Reply& from);
  void MergeFrom(const C2S_Invitee_Reply& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef C2S_Invitee_Reply_ReplyCode ReplyCode;
  static const ReplyCode ACCEPT = C2S_Invitee_Reply_ReplyCode_ACCEPT;
  static const ReplyCode REJECT = C2S_Invitee_Reply_ReplyCode_REJECT;
  static inline bool ReplyCode_IsValid(int value) {
    return C2S_Invitee_Reply_ReplyCode_IsValid(value);
  }
  static const ReplyCode ReplyCode_MIN =
    C2S_Invitee_Reply_ReplyCode_ReplyCode_MIN;
  static const ReplyCode ReplyCode_MAX =
    C2S_Invitee_Reply_ReplyCode_ReplyCode_MAX;
  static const int ReplyCode_ARRAYSIZE =
    C2S_Invitee_Reply_ReplyCode_ReplyCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ReplyCode_descriptor() {
    return C2S_Invitee_Reply_ReplyCode_descriptor();
  }
  static inline const ::std::string& ReplyCode_Name(ReplyCode value) {
    return C2S_Invitee_Reply_ReplyCode_Name(value);
  }
  static inline bool ReplyCode_Parse(const ::std::string& name,
      ReplyCode* value) {
    return C2S_Invitee_Reply_ReplyCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 serial = 1;
  inline bool has_serial() const;
  inline void clear_serial();
  static const int kSerialFieldNumber = 1;
  inline ::google::protobuf::int32 serial() const;
  inline void set_serial(::google::protobuf::int32 value);

  // required int32 reply_code = 2;
  inline bool has_reply_code() const;
  inline void clear_reply_code();
  static const int kReplyCodeFieldNumber = 2;
  inline ::google::protobuf::int32 reply_code() const;
  inline void set_reply_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:C2S_Invitee_Reply)
 private:
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_reply_code();
  inline void clear_has_reply_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serial_;
  ::google::protobuf::int32 reply_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static C2S_Invitee_Reply* default_instance_;
};
// -------------------------------------------------------------------

class S2C_Invitation_Result : public ::google::protobuf::Message {
 public:
  S2C_Invitation_Result();
  virtual ~S2C_Invitation_Result();

  S2C_Invitation_Result(const S2C_Invitation_Result& from);

  inline S2C_Invitation_Result& operator=(const S2C_Invitation_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_Invitation_Result& default_instance();

  void Swap(S2C_Invitation_Result* other);

  // implements Message ----------------------------------------------

  S2C_Invitation_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_Invitation_Result& from);
  void MergeFrom(const S2C_Invitation_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef S2C_Invitation_Result_InviteResult InviteResult;
  static const InviteResult SUCCESS = S2C_Invitation_Result_InviteResult_SUCCESS;
  static const InviteResult FAILED = S2C_Invitation_Result_InviteResult_FAILED;
  static inline bool InviteResult_IsValid(int value) {
    return S2C_Invitation_Result_InviteResult_IsValid(value);
  }
  static const InviteResult InviteResult_MIN =
    S2C_Invitation_Result_InviteResult_InviteResult_MIN;
  static const InviteResult InviteResult_MAX =
    S2C_Invitation_Result_InviteResult_InviteResult_MAX;
  static const int InviteResult_ARRAYSIZE =
    S2C_Invitation_Result_InviteResult_InviteResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InviteResult_descriptor() {
    return S2C_Invitation_Result_InviteResult_descriptor();
  }
  static inline const ::std::string& InviteResult_Name(InviteResult value) {
    return S2C_Invitation_Result_InviteResult_Name(value);
  }
  static inline bool InviteResult_Parse(const ::std::string& name,
      InviteResult* value) {
    return S2C_Invitation_Result_InviteResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required int32 serial = 1;
  inline bool has_serial() const;
  inline void clear_serial();
  static const int kSerialFieldNumber = 1;
  inline ::google::protobuf::int32 serial() const;
  inline void set_serial(::google::protobuf::int32 value);

  // required int32 ret_code = 2;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 2;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:S2C_Invitation_Result)
 private:
  inline void set_has_serial();
  inline void clear_has_serial();
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 serial_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_player_5fmatch_2eproto();
  friend void protobuf_AssignDesc_player_5fmatch_2eproto();
  friend void protobuf_ShutdownFile_player_5fmatch_2eproto();

  void InitAsDefaultInstance();
  static S2C_Invitation_Result* default_instance_;
};
// ===================================================================


// ===================================================================

// C2S_EnterGameReq

// required int32 gamesvr_type = 1;
inline bool C2S_EnterGameReq::has_gamesvr_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_EnterGameReq::set_has_gamesvr_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_EnterGameReq::clear_has_gamesvr_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_EnterGameReq::clear_gamesvr_type() {
  gamesvr_type_ = 0;
  clear_has_gamesvr_type();
}
inline ::google::protobuf::int32 C2S_EnterGameReq::gamesvr_type() const {
  return gamesvr_type_;
}
inline void C2S_EnterGameReq::set_gamesvr_type(::google::protobuf::int32 value) {
  set_has_gamesvr_type();
  gamesvr_type_ = value;
}

// -------------------------------------------------------------------

// S2C_EnterGameRsp

// required int32 ret = 1;
inline bool S2C_EnterGameRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_EnterGameRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_EnterGameRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_EnterGameRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 S2C_EnterGameRsp::ret() const {
  return ret_;
}
inline void S2C_EnterGameRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// C2S_EnterRoomReq

// required int32 enter_way = 2;
inline bool C2S_EnterRoomReq::has_enter_way() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_EnterRoomReq::set_has_enter_way() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_EnterRoomReq::clear_has_enter_way() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_EnterRoomReq::clear_enter_way() {
  enter_way_ = 0;
  clear_has_enter_way();
}
inline ::google::protobuf::int32 C2S_EnterRoomReq::enter_way() const {
  return enter_way_;
}
inline void C2S_EnterRoomReq::set_enter_way(::google::protobuf::int32 value) {
  set_has_enter_way();
  enter_way_ = value;
}

// required int32 game_model = 3;
inline bool C2S_EnterRoomReq::has_game_model() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_EnterRoomReq::set_has_game_model() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_EnterRoomReq::clear_has_game_model() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_EnterRoomReq::clear_game_model() {
  game_model_ = 0;
  clear_has_game_model();
}
inline ::google::protobuf::int32 C2S_EnterRoomReq::game_model() const {
  return game_model_;
}
inline void C2S_EnterRoomReq::set_game_model(::google::protobuf::int32 value) {
  set_has_game_model();
  game_model_ = value;
}

// -------------------------------------------------------------------

// S2C_EnterRoomRsp

// required int32 ret = 1;
inline bool S2C_EnterRoomRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_EnterRoomRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_EnterRoomRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::ret() const {
  return ret_;
}
inline void S2C_EnterRoomRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional int32 room_id = 2;
inline bool S2C_EnterRoomRsp::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_EnterRoomRsp::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_EnterRoomRsp::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::room_id() const {
  return room_id_;
}
inline void S2C_EnterRoomRsp::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 seat_no = 3;
inline bool S2C_EnterRoomRsp::has_seat_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_seat_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_EnterRoomRsp::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_EnterRoomRsp::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::seat_no() const {
  return seat_no_;
}
inline void S2C_EnterRoomRsp::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// optional int32 host_no = 4;
inline bool S2C_EnterRoomRsp::has_host_no() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_host_no() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_EnterRoomRsp::clear_has_host_no() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_EnterRoomRsp::clear_host_no() {
  host_no_ = 0;
  clear_has_host_no();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::host_no() const {
  return host_no_;
}
inline void S2C_EnterRoomRsp::set_host_no(::google::protobuf::int32 value) {
  set_has_host_no();
  host_no_ = value;
}

// repeated int32 lock_seat = 5;
inline int S2C_EnterRoomRsp::lock_seat_size() const {
  return lock_seat_.size();
}
inline void S2C_EnterRoomRsp::clear_lock_seat() {
  lock_seat_.Clear();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::lock_seat(int index) const {
  return lock_seat_.Get(index);
}
inline void S2C_EnterRoomRsp::set_lock_seat(int index, ::google::protobuf::int32 value) {
  lock_seat_.Set(index, value);
}
inline void S2C_EnterRoomRsp::add_lock_seat(::google::protobuf::int32 value) {
  lock_seat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
S2C_EnterRoomRsp::lock_seat() const {
  return lock_seat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
S2C_EnterRoomRsp::mutable_lock_seat() {
  return &lock_seat_;
}

// optional int32 enter_way = 6;
inline bool S2C_EnterRoomRsp::has_enter_way() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_enter_way() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_EnterRoomRsp::clear_has_enter_way() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_EnterRoomRsp::clear_enter_way() {
  enter_way_ = 0;
  clear_has_enter_way();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::enter_way() const {
  return enter_way_;
}
inline void S2C_EnterRoomRsp::set_enter_way(::google::protobuf::int32 value) {
  set_has_enter_way();
  enter_way_ = value;
}

// optional int32 game_model = 7;
inline bool S2C_EnterRoomRsp::has_game_model() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_game_model() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2C_EnterRoomRsp::clear_has_game_model() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2C_EnterRoomRsp::clear_game_model() {
  game_model_ = 0;
  clear_has_game_model();
}
inline ::google::protobuf::int32 S2C_EnterRoomRsp::game_model() const {
  return game_model_;
}
inline void S2C_EnterRoomRsp::set_game_model(::google::protobuf::int32 value) {
  set_has_game_model();
  game_model_ = value;
}

// optional .AllPlayerInfo player_info = 8;
inline bool S2C_EnterRoomRsp::has_player_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2C_EnterRoomRsp::set_has_player_info() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2C_EnterRoomRsp::clear_has_player_info() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2C_EnterRoomRsp::clear_player_info() {
  if (player_info_ != NULL) player_info_->::AllPlayerInfo::Clear();
  clear_has_player_info();
}
inline const ::AllPlayerInfo& S2C_EnterRoomRsp::player_info() const {
  return player_info_ != NULL ? *player_info_ : *default_instance_->player_info_;
}
inline ::AllPlayerInfo* S2C_EnterRoomRsp::mutable_player_info() {
  set_has_player_info();
  if (player_info_ == NULL) player_info_ = new ::AllPlayerInfo;
  return player_info_;
}
inline ::AllPlayerInfo* S2C_EnterRoomRsp::release_player_info() {
  clear_has_player_info();
  ::AllPlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void S2C_EnterRoomRsp::set_allocated_player_info(::AllPlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    set_has_player_info();
  } else {
    clear_has_player_info();
  }
}

// -------------------------------------------------------------------

// S2C_StartGame

// optional int32 cost_energy = 1;
inline bool S2C_StartGame::has_cost_energy() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_StartGame::set_has_cost_energy() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_StartGame::clear_has_cost_energy() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_StartGame::clear_cost_energy() {
  cost_energy_ = 0;
  clear_has_cost_energy();
}
inline ::google::protobuf::int32 S2C_StartGame::cost_energy() const {
  return cost_energy_;
}
inline void S2C_StartGame::set_cost_energy(::google::protobuf::int32 value) {
  set_has_cost_energy();
  cost_energy_ = value;
}

// optional int32 cost_ticket = 2;
inline bool S2C_StartGame::has_cost_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_StartGame::set_has_cost_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_StartGame::clear_has_cost_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_StartGame::clear_cost_ticket() {
  cost_ticket_ = 0;
  clear_has_cost_ticket();
}
inline ::google::protobuf::int32 S2C_StartGame::cost_ticket() const {
  return cost_ticket_;
}
inline void S2C_StartGame::set_cost_ticket(::google::protobuf::int32 value) {
  set_has_cost_ticket();
  cost_ticket_ = value;
}

// -------------------------------------------------------------------

// GameInfo

// optional int32 gameCoin = 1;
inline bool GameInfo::has_gamecoin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameInfo::set_has_gamecoin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameInfo::clear_has_gamecoin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameInfo::clear_gamecoin() {
  gamecoin_ = 0;
  clear_has_gamecoin();
}
inline ::google::protobuf::int32 GameInfo::gamecoin() const {
  return gamecoin_;
}
inline void GameInfo::set_gamecoin(::google::protobuf::int32 value) {
  set_has_gamecoin();
  gamecoin_ = value;
}

// optional int32 status = 2;
inline bool GameInfo::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GameInfo::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GameInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GameInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 GameInfo::status() const {
  return status_;
}
inline void GameInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 seat_no = 3;
inline bool GameInfo::has_seat_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GameInfo::set_has_seat_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GameInfo::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GameInfo::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 GameInfo::seat_no() const {
  return seat_no_;
}
inline void GameInfo::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// optional int32 color = 4;
inline bool GameInfo::has_color() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GameInfo::set_has_color() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GameInfo::clear_has_color() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GameInfo::clear_color() {
  color_ = 0;
  clear_has_color();
}
inline ::google::protobuf::int32 GameInfo::color() const {
  return color_;
}
inline void GameInfo::set_color(::google::protobuf::int32 value) {
  set_has_color();
  color_ = value;
}

// optional int32 curr_posi = 5;
inline bool GameInfo::has_curr_posi() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GameInfo::set_has_curr_posi() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GameInfo::clear_has_curr_posi() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GameInfo::clear_curr_posi() {
  curr_posi_ = 0;
  clear_has_curr_posi();
}
inline ::google::protobuf::int32 GameInfo::curr_posi() const {
  return curr_posi_;
}
inline void GameInfo::set_curr_posi(::google::protobuf::int32 value) {
  set_has_curr_posi();
  curr_posi_ = value;
}

// optional int32 rand_card_id = 6;
inline bool GameInfo::has_rand_card_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GameInfo::set_has_rand_card_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GameInfo::clear_has_rand_card_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GameInfo::clear_rand_card_id() {
  rand_card_id_ = 0;
  clear_has_rand_card_id();
}
inline ::google::protobuf::int32 GameInfo::rand_card_id() const {
  return rand_card_id_;
}
inline void GameInfo::set_rand_card_id(::google::protobuf::int32 value) {
  set_has_rand_card_id();
  rand_card_id_ = value;
}

// optional int32 equipment = 7;
inline bool GameInfo::has_equipment() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GameInfo::set_has_equipment() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GameInfo::clear_has_equipment() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GameInfo::clear_equipment() {
  equipment_ = 0;
  clear_has_equipment();
}
inline ::google::protobuf::int32 GameInfo::equipment() const {
  return equipment_;
}
inline void GameInfo::set_equipment(::google::protobuf::int32 value) {
  set_has_equipment();
  equipment_ = value;
}

// -------------------------------------------------------------------

// PlayerInfo

// required .DBCACHE.PlayerBaseInfo baseinfo = 1;
inline bool PlayerInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::DBCACHE::PlayerBaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::DBCACHE::PlayerBaseInfo& PlayerInfo::baseinfo() const {
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::DBCACHE::PlayerBaseInfo* PlayerInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::DBCACHE::PlayerBaseInfo;
  return baseinfo_;
}
inline ::DBCACHE::PlayerBaseInfo* PlayerInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::DBCACHE::PlayerBaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_baseinfo(::DBCACHE::PlayerBaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
}

// required .CARDSYSTEM.PlayerCardInfo card_property = 2;
inline bool PlayerInfo::has_card_property() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::set_has_card_property() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfo::clear_has_card_property() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfo::clear_card_property() {
  if (card_property_ != NULL) card_property_->::CARDSYSTEM::PlayerCardInfo::Clear();
  clear_has_card_property();
}
inline const ::CARDSYSTEM::PlayerCardInfo& PlayerInfo::card_property() const {
  return card_property_ != NULL ? *card_property_ : *default_instance_->card_property_;
}
inline ::CARDSYSTEM::PlayerCardInfo* PlayerInfo::mutable_card_property() {
  set_has_card_property();
  if (card_property_ == NULL) card_property_ = new ::CARDSYSTEM::PlayerCardInfo;
  return card_property_;
}
inline ::CARDSYSTEM::PlayerCardInfo* PlayerInfo::release_card_property() {
  clear_has_card_property();
  ::CARDSYSTEM::PlayerCardInfo* temp = card_property_;
  card_property_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_card_property(::CARDSYSTEM::PlayerCardInfo* card_property) {
  delete card_property_;
  card_property_ = card_property;
  if (card_property) {
    set_has_card_property();
  } else {
    clear_has_card_property();
  }
}

// required .GameInfo gameinfo = 3;
inline bool PlayerInfo::has_gameinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::set_has_gameinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfo::clear_has_gameinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfo::clear_gameinfo() {
  if (gameinfo_ != NULL) gameinfo_->::GameInfo::Clear();
  clear_has_gameinfo();
}
inline const ::GameInfo& PlayerInfo::gameinfo() const {
  return gameinfo_ != NULL ? *gameinfo_ : *default_instance_->gameinfo_;
}
inline ::GameInfo* PlayerInfo::mutable_gameinfo() {
  set_has_gameinfo();
  if (gameinfo_ == NULL) gameinfo_ = new ::GameInfo;
  return gameinfo_;
}
inline ::GameInfo* PlayerInfo::release_gameinfo() {
  clear_has_gameinfo();
  ::GameInfo* temp = gameinfo_;
  gameinfo_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_gameinfo(::GameInfo* gameinfo) {
  delete gameinfo_;
  gameinfo_ = gameinfo;
  if (gameinfo) {
    set_has_gameinfo();
  } else {
    clear_has_gameinfo();
  }
}

// -------------------------------------------------------------------

// RoomInfo

// optional int32 room_id = 1;
inline bool RoomInfo::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_room_id() {
  room_id_ = 0;
  clear_has_room_id();
}
inline ::google::protobuf::int32 RoomInfo::room_id() const {
  return room_id_;
}
inline void RoomInfo::set_room_id(::google::protobuf::int32 value) {
  set_has_room_id();
  room_id_ = value;
}

// optional int32 seat_no = 2;
inline bool RoomInfo::has_seat_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_seat_no() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 RoomInfo::seat_no() const {
  return seat_no_;
}
inline void RoomInfo::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// optional int32 host_no = 3;
inline bool RoomInfo::has_host_no() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_host_no() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_host_no() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_host_no() {
  host_no_ = 0;
  clear_has_host_no();
}
inline ::google::protobuf::int32 RoomInfo::host_no() const {
  return host_no_;
}
inline void RoomInfo::set_host_no(::google::protobuf::int32 value) {
  set_has_host_no();
  host_no_ = value;
}

// repeated int32 lock_seat = 4;
inline int RoomInfo::lock_seat_size() const {
  return lock_seat_.size();
}
inline void RoomInfo::clear_lock_seat() {
  lock_seat_.Clear();
}
inline ::google::protobuf::int32 RoomInfo::lock_seat(int index) const {
  return lock_seat_.Get(index);
}
inline void RoomInfo::set_lock_seat(int index, ::google::protobuf::int32 value) {
  lock_seat_.Set(index, value);
}
inline void RoomInfo::add_lock_seat(::google::protobuf::int32 value) {
  lock_seat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
RoomInfo::lock_seat() const {
  return lock_seat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
RoomInfo::mutable_lock_seat() {
  return &lock_seat_;
}

// optional int32 room_type = 5;
inline bool RoomInfo::has_room_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomInfo::set_has_room_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomInfo::clear_has_room_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomInfo::clear_room_type() {
  room_type_ = 0;
  clear_has_room_type();
}
inline ::google::protobuf::int32 RoomInfo::room_type() const {
  return room_type_;
}
inline void RoomInfo::set_room_type(::google::protobuf::int32 value) {
  set_has_room_type();
  room_type_ = value;
}

// optional int32 room_model = 6;
inline bool RoomInfo::has_room_model() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomInfo::set_has_room_model() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomInfo::clear_has_room_model() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomInfo::clear_room_model() {
  room_model_ = 0;
  clear_has_room_model();
}
inline ::google::protobuf::int32 RoomInfo::room_model() const {
  return room_model_;
}
inline void RoomInfo::set_room_model(::google::protobuf::int32 value) {
  set_has_room_model();
  room_model_ = value;
}

// optional int32 left_round = 7;
inline bool RoomInfo::has_left_round() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoomInfo::set_has_left_round() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoomInfo::clear_has_left_round() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoomInfo::clear_left_round() {
  left_round_ = 0;
  clear_has_left_round();
}
inline ::google::protobuf::int32 RoomInfo::left_round() const {
  return left_round_;
}
inline void RoomInfo::set_left_round(::google::protobuf::int32 value) {
  set_has_left_round();
  left_round_ = value;
}

// -------------------------------------------------------------------

// AllPlayerInfo

// repeated .PlayerInfo info = 1;
inline int AllPlayerInfo::info_size() const {
  return info_.size();
}
inline void AllPlayerInfo::clear_info() {
  info_.Clear();
}
inline const ::PlayerInfo& AllPlayerInfo::info(int index) const {
  return info_.Get(index);
}
inline ::PlayerInfo* AllPlayerInfo::mutable_info(int index) {
  return info_.Mutable(index);
}
inline ::PlayerInfo* AllPlayerInfo::add_info() {
  return info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >&
AllPlayerInfo::info() const {
  return info_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >*
AllPlayerInfo::mutable_info() {
  return &info_;
}

// -------------------------------------------------------------------

// C2S_SetEnterFlagReq

// -------------------------------------------------------------------

// S2C_SetEnterFlagRsp

// required int32 ret = 1;
inline bool S2C_SetEnterFlagRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_SetEnterFlagRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_SetEnterFlagRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_SetEnterFlagRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 S2C_SetEnterFlagRsp::ret() const {
  return ret_;
}
inline void S2C_SetEnterFlagRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// S2C_NotifyPlayerEnter

// required .PlayerInfo info = 2;
inline bool S2C_NotifyPlayerEnter::has_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NotifyPlayerEnter::set_has_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NotifyPlayerEnter::clear_has_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NotifyPlayerEnter::clear_info() {
  if (info_ != NULL) info_->::PlayerInfo::Clear();
  clear_has_info();
}
inline const ::PlayerInfo& S2C_NotifyPlayerEnter::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::PlayerInfo* S2C_NotifyPlayerEnter::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::PlayerInfo;
  return info_;
}
inline ::PlayerInfo* S2C_NotifyPlayerEnter::release_info() {
  clear_has_info();
  ::PlayerInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void S2C_NotifyPlayerEnter::set_allocated_info(::PlayerInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
}

// -------------------------------------------------------------------

// C2S_GameReadReq

// required int32 action = 1;
inline bool C2S_GameReadReq::has_action() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_GameReadReq::set_has_action() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_GameReadReq::clear_has_action() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_GameReadReq::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::google::protobuf::int32 C2S_GameReadReq::action() const {
  return action_;
}
inline void C2S_GameReadReq::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
}

// -------------------------------------------------------------------

// S2C_GameReadRsp

// required int32 ret = 1;
inline bool S2C_GameReadRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_GameReadRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_GameReadRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_GameReadRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 S2C_GameReadRsp::ret() const {
  return ret_;
}
inline void S2C_GameReadRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// -------------------------------------------------------------------

// S2C_NotifyPlayerRead

// required int32 role_id = 1;
inline bool S2C_NotifyPlayerRead::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NotifyPlayerRead::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NotifyPlayerRead::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NotifyPlayerRead::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 S2C_NotifyPlayerRead::role_id() const {
  return role_id_;
}
inline void S2C_NotifyPlayerRead::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// required int32 flag = 2;
inline bool S2C_NotifyPlayerRead::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NotifyPlayerRead::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NotifyPlayerRead::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NotifyPlayerRead::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 S2C_NotifyPlayerRead::flag() const {
  return flag_;
}
inline void S2C_NotifyPlayerRead::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// C2S_SetSeatStateReq

// required int32 seat_no = 1;
inline bool C2S_SetSeatStateReq::has_seat_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_SetSeatStateReq::set_has_seat_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_SetSeatStateReq::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_SetSeatStateReq::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 C2S_SetSeatStateReq::seat_no() const {
  return seat_no_;
}
inline void C2S_SetSeatStateReq::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// required int32 seat_state = 2;
inline bool C2S_SetSeatStateReq::has_seat_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_SetSeatStateReq::set_has_seat_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_SetSeatStateReq::clear_has_seat_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_SetSeatStateReq::clear_seat_state() {
  seat_state_ = 0;
  clear_has_seat_state();
}
inline ::google::protobuf::int32 C2S_SetSeatStateReq::seat_state() const {
  return seat_state_;
}
inline void C2S_SetSeatStateReq::set_seat_state(::google::protobuf::int32 value) {
  set_has_seat_state();
  seat_state_ = value;
}

// -------------------------------------------------------------------

// S2C_NotifySeatState

// required int32 seat_no = 1;
inline bool S2C_NotifySeatState::has_seat_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NotifySeatState::set_has_seat_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NotifySeatState::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NotifySeatState::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 S2C_NotifySeatState::seat_no() const {
  return seat_no_;
}
inline void S2C_NotifySeatState::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// required int32 seat_state = 2;
inline bool S2C_NotifySeatState::has_seat_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NotifySeatState::set_has_seat_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NotifySeatState::clear_has_seat_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NotifySeatState::clear_seat_state() {
  seat_state_ = 0;
  clear_has_seat_state();
}
inline ::google::protobuf::int32 S2C_NotifySeatState::seat_state() const {
  return seat_state_;
}
inline void S2C_NotifySeatState::set_seat_state(::google::protobuf::int32 value) {
  set_has_seat_state();
  seat_state_ = value;
}

// -------------------------------------------------------------------

// S2C_TickOut

// required int32 role_id = 1;
inline bool S2C_TickOut::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_TickOut::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_TickOut::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_TickOut::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 S2C_TickOut::role_id() const {
  return role_id_;
}
inline void S2C_TickOut::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// S2C_ShowStartGameBtn

// required int32 flag = 1;
inline bool S2C_ShowStartGameBtn::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ShowStartGameBtn::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ShowStartGameBtn::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ShowStartGameBtn::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 S2C_ShowStartGameBtn::flag() const {
  return flag_;
}
inline void S2C_ShowStartGameBtn::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// -------------------------------------------------------------------

// S2C_HostChange

// required int32 host_no = 1;
inline bool S2C_HostChange::has_host_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_HostChange::set_has_host_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_HostChange::clear_has_host_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_HostChange::clear_host_no() {
  host_no_ = 0;
  clear_has_host_no();
}
inline ::google::protobuf::int32 S2C_HostChange::host_no() const {
  return host_no_;
}
inline void S2C_HostChange::set_host_no(::google::protobuf::int32 value) {
  set_has_host_no();
  host_no_ = value;
}

// -------------------------------------------------------------------

// S2C_NotifyGameInfoChange

// required int32 seat_no = 1;
inline bool S2C_NotifyGameInfoChange::has_seat_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NotifyGameInfoChange::set_has_seat_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NotifyGameInfoChange::clear_has_seat_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NotifyGameInfoChange::clear_seat_no() {
  seat_no_ = 0;
  clear_has_seat_no();
}
inline ::google::protobuf::int32 S2C_NotifyGameInfoChange::seat_no() const {
  return seat_no_;
}
inline void S2C_NotifyGameInfoChange::set_seat_no(::google::protobuf::int32 value) {
  set_has_seat_no();
  seat_no_ = value;
}

// required .GameInfo game_info = 2;
inline bool S2C_NotifyGameInfoChange::has_game_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_NotifyGameInfoChange::set_has_game_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_NotifyGameInfoChange::clear_has_game_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_NotifyGameInfoChange::clear_game_info() {
  if (game_info_ != NULL) game_info_->::GameInfo::Clear();
  clear_has_game_info();
}
inline const ::GameInfo& S2C_NotifyGameInfoChange::game_info() const {
  return game_info_ != NULL ? *game_info_ : *default_instance_->game_info_;
}
inline ::GameInfo* S2C_NotifyGameInfoChange::mutable_game_info() {
  set_has_game_info();
  if (game_info_ == NULL) game_info_ = new ::GameInfo;
  return game_info_;
}
inline ::GameInfo* S2C_NotifyGameInfoChange::release_game_info() {
  clear_has_game_info();
  ::GameInfo* temp = game_info_;
  game_info_ = NULL;
  return temp;
}
inline void S2C_NotifyGameInfoChange::set_allocated_game_info(::GameInfo* game_info) {
  delete game_info_;
  game_info_ = game_info;
  if (game_info) {
    set_has_game_info();
  } else {
    clear_has_game_info();
  }
}

// -------------------------------------------------------------------

// C2S_LeaveRoomReq

// -------------------------------------------------------------------

// S2C_NotifyPlayerLeave

// required int32 role_id = 1;
inline bool S2C_NotifyPlayerLeave::has_role_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_NotifyPlayerLeave::set_has_role_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_NotifyPlayerLeave::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_NotifyPlayerLeave::clear_role_id() {
  role_id_ = 0;
  clear_has_role_id();
}
inline ::google::protobuf::int32 S2C_NotifyPlayerLeave::role_id() const {
  return role_id_;
}
inline void S2C_NotifyPlayerLeave::set_role_id(::google::protobuf::int32 value) {
  set_has_role_id();
  role_id_ = value;
}

// -------------------------------------------------------------------

// C2S_Invite_Player_Req

// required int32 invitee = 1;
inline bool C2S_Invite_Player_Req::has_invitee() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Invite_Player_Req::set_has_invitee() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Invite_Player_Req::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Invite_Player_Req::clear_invitee() {
  invitee_ = 0;
  clear_has_invitee();
}
inline ::google::protobuf::int32 C2S_Invite_Player_Req::invitee() const {
  return invitee_;
}
inline void C2S_Invite_Player_Req::set_invitee(::google::protobuf::int32 value) {
  set_has_invitee();
  invitee_ = value;
}

// -------------------------------------------------------------------

// S2C_Invite_Player_Rsp

// required int32 ret_code = 1;
inline bool S2C_Invite_Player_Rsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Invite_Player_Rsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Invite_Player_Rsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Invite_Player_Rsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_Invite_Player_Rsp::ret_code() const {
  return ret_code_;
}
inline void S2C_Invite_Player_Rsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// required int32 invitee = 2;
inline bool S2C_Invite_Player_Rsp::has_invitee() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Invite_Player_Rsp::set_has_invitee() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Invite_Player_Rsp::clear_has_invitee() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Invite_Player_Rsp::clear_invitee() {
  invitee_ = 0;
  clear_has_invitee();
}
inline ::google::protobuf::int32 S2C_Invite_Player_Rsp::invitee() const {
  return invitee_;
}
inline void S2C_Invite_Player_Rsp::set_invitee(::google::protobuf::int32 value) {
  set_has_invitee();
  invitee_ = value;
}

// -------------------------------------------------------------------

// S2C_Notify_Invitee

// required int32 serial = 1;
inline bool S2C_Notify_Invitee::has_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Notify_Invitee::set_has_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Notify_Invitee::clear_has_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Notify_Invitee::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
inline ::google::protobuf::int32 S2C_Notify_Invitee::serial() const {
  return serial_;
}
inline void S2C_Notify_Invitee::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
}

// optional int32 inviter_id = 2;
inline bool S2C_Notify_Invitee::has_inviter_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Notify_Invitee::set_has_inviter_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Notify_Invitee::clear_has_inviter_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Notify_Invitee::clear_inviter_id() {
  inviter_id_ = 0;
  clear_has_inviter_id();
}
inline ::google::protobuf::int32 S2C_Notify_Invitee::inviter_id() const {
  return inviter_id_;
}
inline void S2C_Notify_Invitee::set_inviter_id(::google::protobuf::int32 value) {
  set_has_inviter_id();
  inviter_id_ = value;
}

// optional bytes inviter_name = 3;
inline bool S2C_Notify_Invitee::has_inviter_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_Notify_Invitee::set_has_inviter_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_Notify_Invitee::clear_has_inviter_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_Notify_Invitee::clear_inviter_name() {
  if (inviter_name_ != &::google::protobuf::internal::kEmptyString) {
    inviter_name_->clear();
  }
  clear_has_inviter_name();
}
inline const ::std::string& S2C_Notify_Invitee::inviter_name() const {
  return *inviter_name_;
}
inline void S2C_Notify_Invitee::set_inviter_name(const ::std::string& value) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::kEmptyString) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(value);
}
inline void S2C_Notify_Invitee::set_inviter_name(const char* value) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::kEmptyString) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(value);
}
inline void S2C_Notify_Invitee::set_inviter_name(const void* value, size_t size) {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::kEmptyString) {
    inviter_name_ = new ::std::string;
  }
  inviter_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_Notify_Invitee::mutable_inviter_name() {
  set_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::kEmptyString) {
    inviter_name_ = new ::std::string;
  }
  return inviter_name_;
}
inline ::std::string* S2C_Notify_Invitee::release_inviter_name() {
  clear_has_inviter_name();
  if (inviter_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = inviter_name_;
    inviter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_Notify_Invitee::set_allocated_inviter_name(::std::string* inviter_name) {
  if (inviter_name_ != &::google::protobuf::internal::kEmptyString) {
    delete inviter_name_;
  }
  if (inviter_name) {
    set_has_inviter_name();
    inviter_name_ = inviter_name;
  } else {
    clear_has_inviter_name();
    inviter_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_Invitee_Reply

// required int32 serial = 1;
inline bool C2S_Invitee_Reply::has_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_Invitee_Reply::set_has_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_Invitee_Reply::clear_has_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_Invitee_Reply::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
inline ::google::protobuf::int32 C2S_Invitee_Reply::serial() const {
  return serial_;
}
inline void C2S_Invitee_Reply::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
}

// required int32 reply_code = 2;
inline bool C2S_Invitee_Reply::has_reply_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_Invitee_Reply::set_has_reply_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_Invitee_Reply::clear_has_reply_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_Invitee_Reply::clear_reply_code() {
  reply_code_ = 0;
  clear_has_reply_code();
}
inline ::google::protobuf::int32 C2S_Invitee_Reply::reply_code() const {
  return reply_code_;
}
inline void C2S_Invitee_Reply::set_reply_code(::google::protobuf::int32 value) {
  set_has_reply_code();
  reply_code_ = value;
}

// -------------------------------------------------------------------

// S2C_Invitation_Result

// required int32 serial = 1;
inline bool S2C_Invitation_Result::has_serial() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_Invitation_Result::set_has_serial() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_Invitation_Result::clear_has_serial() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_Invitation_Result::clear_serial() {
  serial_ = 0;
  clear_has_serial();
}
inline ::google::protobuf::int32 S2C_Invitation_Result::serial() const {
  return serial_;
}
inline void S2C_Invitation_Result::set_serial(::google::protobuf::int32 value) {
  set_has_serial();
  serial_ = value;
}

// required int32 ret_code = 2;
inline bool S2C_Invitation_Result::has_ret_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_Invitation_Result::set_has_ret_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_Invitation_Result::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_Invitation_Result::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_Invitation_Result::ret_code() const {
  return ret_code_;
}
inline void S2C_Invitation_Result::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::C2S_EnterRoomReq_EnterWayType>() {
  return ::C2S_EnterRoomReq_EnterWayType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::C2S_Invitee_Reply_ReplyCode>() {
  return ::C2S_Invitee_Reply_ReplyCode_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::S2C_Invitation_Result_InviteResult>() {
  return ::S2C_Invitation_Result_InviteResult_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_player_5fmatch_2eproto__INCLUDED
