// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gm.proto

#ifndef PROTOBUF_gm_2eproto__INCLUDED
#define PROTOBUF_gm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "db_cache.pb.h"
#include "mail.pb.h"
// @@protoc_insertion_point(includes)

namespace GM {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_gm_2eproto();
void protobuf_AssignDesc_gm_2eproto();
void protobuf_ShutdownFile_gm_2eproto();

class C2S_RandEventReq;
class C2S_QueryPlayerDataReq;
class S2C_QueryPlayerDataRsp;
class C2S_OnlinePlayerListReq;
class S2C_OnlinePlayerListRsp;
class C2S_BroadcastMailReq;
class S2C_BroadcastMailRsp;
class C2S_MailToPlayerReq;
class S2C_MailToPlayerRsp;
class TicketChange;
class CardChange;
class C2S_ModifyPlayerDataReq;
class S2C_ModifyPlayerDataRsp;
class C2S_ServerStatisticsReq;
class Statistics_Server;
class Statistics_Online;
class Statistics_Runtime;
class Statistics_System;
class S2C_ServerStatisticsRsp;
class C2S_ResetServerStatusReq;
class S2C_ResetServerStatusRsp;
class C2S_ControlServerReq;
class S2C_ControlServerRsp;
class C2S_BanPlayerReq;
class S2C_BanPlayerRsp;
class C2S_UnBanPlayerReq;
class S2C_UnBanPlayerRsp;

enum ChangeType {
  Add = 0,
  Remove = 1,
  Modify = 2
};
bool ChangeType_IsValid(int value);
const ChangeType ChangeType_MIN = Add;
const ChangeType ChangeType_MAX = Modify;
const int ChangeType_ARRAYSIZE = ChangeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ChangeType_descriptor();
inline const ::std::string& ChangeType_Name(ChangeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ChangeType_descriptor(), value);
}
inline bool ChangeType_Parse(
    const ::std::string& name, ChangeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeType>(
    ChangeType_descriptor(), name, value);
}
// ===================================================================

class C2S_RandEventReq : public ::google::protobuf::Message {
 public:
  C2S_RandEventReq();
  virtual ~C2S_RandEventReq();

  C2S_RandEventReq(const C2S_RandEventReq& from);

  inline C2S_RandEventReq& operator=(const C2S_RandEventReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_RandEventReq& default_instance();

  void Swap(C2S_RandEventReq* other);

  // implements Message ----------------------------------------------

  C2S_RandEventReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_RandEventReq& from);
  void MergeFrom(const C2S_RandEventReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 event_id = 1;
  inline bool has_event_id() const;
  inline void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  inline ::google::protobuf::int32 event_id() const;
  inline void set_event_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_RandEventReq)
 private:
  inline void set_has_event_id();
  inline void clear_has_event_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 event_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_RandEventReq* default_instance_;
};
// -------------------------------------------------------------------

class C2S_QueryPlayerDataReq : public ::google::protobuf::Message {
 public:
  C2S_QueryPlayerDataReq();
  virtual ~C2S_QueryPlayerDataReq();

  C2S_QueryPlayerDataReq(const C2S_QueryPlayerDataReq& from);

  inline C2S_QueryPlayerDataReq& operator=(const C2S_QueryPlayerDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_QueryPlayerDataReq& default_instance();

  void Swap(C2S_QueryPlayerDataReq* other);

  // implements Message ----------------------------------------------

  C2S_QueryPlayerDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_QueryPlayerDataReq& from);
  void MergeFrom(const C2S_QueryPlayerDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_QueryPlayerDataReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_QueryPlayerDataReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_QueryPlayerDataRsp : public ::google::protobuf::Message {
 public:
  S2C_QueryPlayerDataRsp();
  virtual ~S2C_QueryPlayerDataRsp();

  S2C_QueryPlayerDataRsp(const S2C_QueryPlayerDataRsp& from);

  inline S2C_QueryPlayerDataRsp& operator=(const S2C_QueryPlayerDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_QueryPlayerDataRsp& default_instance();

  void Swap(S2C_QueryPlayerDataRsp* other);

  // implements Message ----------------------------------------------

  S2C_QueryPlayerDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_QueryPlayerDataRsp& from);
  void MergeFrom(const S2C_QueryPlayerDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // required int32 player_id = 2;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 player_status = 3;
  inline bool has_player_status() const;
  inline void clear_player_status();
  static const int kPlayerStatusFieldNumber = 3;
  inline ::google::protobuf::int32 player_status() const;
  inline void set_player_status(::google::protobuf::int32 value);

  // optional int32 zone_id = 4;
  inline bool has_zone_id() const;
  inline void clear_zone_id();
  static const int kZoneIdFieldNumber = 4;
  inline ::google::protobuf::int32 zone_id() const;
  inline void set_zone_id(::google::protobuf::int32 value);

  // optional int32 gamesrv_id = 5;
  inline bool has_gamesrv_id() const;
  inline void clear_gamesrv_id();
  static const int kGamesrvIdFieldNumber = 5;
  inline ::google::protobuf::int32 gamesrv_id() const;
  inline void set_gamesrv_id(::google::protobuf::int32 value);

  // optional int32 room_number = 6;
  inline bool has_room_number() const;
  inline void clear_room_number();
  static const int kRoomNumberFieldNumber = 6;
  inline ::google::protobuf::int32 room_number() const;
  inline void set_room_number(::google::protobuf::int32 value);

  // optional int32 seat_number = 7;
  inline bool has_seat_number() const;
  inline void clear_seat_number();
  static const int kSeatNumberFieldNumber = 7;
  inline ::google::protobuf::int32 seat_number() const;
  inline void set_seat_number(::google::protobuf::int32 value);

  // optional .DBCACHE.Player player_data = 8;
  inline bool has_player_data() const;
  inline void clear_player_data();
  static const int kPlayerDataFieldNumber = 8;
  inline const ::DBCACHE::Player& player_data() const;
  inline ::DBCACHE::Player* mutable_player_data();
  inline ::DBCACHE::Player* release_player_data();
  inline void set_allocated_player_data(::DBCACHE::Player* player_data);

  // @@protoc_insertion_point(class_scope:GM.S2C_QueryPlayerDataRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_player_status();
  inline void clear_has_player_status();
  inline void set_has_zone_id();
  inline void clear_has_zone_id();
  inline void set_has_gamesrv_id();
  inline void clear_has_gamesrv_id();
  inline void set_has_room_number();
  inline void clear_has_room_number();
  inline void set_has_seat_number();
  inline void clear_has_seat_number();
  inline void set_has_player_data();
  inline void clear_has_player_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 player_status_;
  ::google::protobuf::int32 zone_id_;
  ::google::protobuf::int32 gamesrv_id_;
  ::google::protobuf::int32 room_number_;
  ::DBCACHE::Player* player_data_;
  ::google::protobuf::int32 seat_number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_QueryPlayerDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_OnlinePlayerListReq : public ::google::protobuf::Message {
 public:
  C2S_OnlinePlayerListReq();
  virtual ~C2S_OnlinePlayerListReq();

  C2S_OnlinePlayerListReq(const C2S_OnlinePlayerListReq& from);

  inline C2S_OnlinePlayerListReq& operator=(const C2S_OnlinePlayerListReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_OnlinePlayerListReq& default_instance();

  void Swap(C2S_OnlinePlayerListReq* other);

  // implements Message ----------------------------------------------

  C2S_OnlinePlayerListReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_OnlinePlayerListReq& from);
  void MergeFrom(const C2S_OnlinePlayerListReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GM.C2S_OnlinePlayerListReq)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_OnlinePlayerListReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_OnlinePlayerListRsp : public ::google::protobuf::Message {
 public:
  S2C_OnlinePlayerListRsp();
  virtual ~S2C_OnlinePlayerListRsp();

  S2C_OnlinePlayerListRsp(const S2C_OnlinePlayerListRsp& from);

  inline S2C_OnlinePlayerListRsp& operator=(const S2C_OnlinePlayerListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_OnlinePlayerListRsp& default_instance();

  void Swap(S2C_OnlinePlayerListRsp* other);

  // implements Message ----------------------------------------------

  S2C_OnlinePlayerListRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_OnlinePlayerListRsp& from);
  void MergeFrom(const S2C_OnlinePlayerListRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .DBCACHE.PlayerBaseInfo player = 1;
  inline int player_size() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 1;
  inline const ::DBCACHE::PlayerBaseInfo& player(int index) const;
  inline ::DBCACHE::PlayerBaseInfo* mutable_player(int index);
  inline ::DBCACHE::PlayerBaseInfo* add_player();
  inline const ::google::protobuf::RepeatedPtrField< ::DBCACHE::PlayerBaseInfo >&
      player() const;
  inline ::google::protobuf::RepeatedPtrField< ::DBCACHE::PlayerBaseInfo >*
      mutable_player();

  // @@protoc_insertion_point(class_scope:GM.S2C_OnlinePlayerListRsp)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::DBCACHE::PlayerBaseInfo > player_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_OnlinePlayerListRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BroadcastMailReq : public ::google::protobuf::Message {
 public:
  C2S_BroadcastMailReq();
  virtual ~C2S_BroadcastMailReq();

  C2S_BroadcastMailReq(const C2S_BroadcastMailReq& from);

  inline C2S_BroadcastMailReq& operator=(const C2S_BroadcastMailReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BroadcastMailReq& default_instance();

  void Swap(C2S_BroadcastMailReq* other);

  // implements Message ----------------------------------------------

  C2S_BroadcastMailReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BroadcastMailReq& from);
  void MergeFrom(const C2S_BroadcastMailReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .MAIL.Z2M_Send_System_Mail_Req mail = 1;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 1;
  inline const ::MAIL::Z2M_Send_System_Mail_Req& mail() const;
  inline ::MAIL::Z2M_Send_System_Mail_Req* mutable_mail();
  inline ::MAIL::Z2M_Send_System_Mail_Req* release_mail();
  inline void set_allocated_mail(::MAIL::Z2M_Send_System_Mail_Req* mail);

  // @@protoc_insertion_point(class_scope:GM.C2S_BroadcastMailReq)
 private:
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MAIL::Z2M_Send_System_Mail_Req* mail_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_BroadcastMailReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BroadcastMailRsp : public ::google::protobuf::Message {
 public:
  S2C_BroadcastMailRsp();
  virtual ~S2C_BroadcastMailRsp();

  S2C_BroadcastMailRsp(const S2C_BroadcastMailRsp& from);

  inline S2C_BroadcastMailRsp& operator=(const S2C_BroadcastMailRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BroadcastMailRsp& default_instance();

  void Swap(S2C_BroadcastMailRsp* other);

  // implements Message ----------------------------------------------

  S2C_BroadcastMailRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BroadcastMailRsp& from);
  void MergeFrom(const S2C_BroadcastMailRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_BroadcastMailRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_BroadcastMailRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_MailToPlayerReq : public ::google::protobuf::Message {
 public:
  C2S_MailToPlayerReq();
  virtual ~C2S_MailToPlayerReq();

  C2S_MailToPlayerReq(const C2S_MailToPlayerReq& from);

  inline C2S_MailToPlayerReq& operator=(const C2S_MailToPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_MailToPlayerReq& default_instance();

  void Swap(C2S_MailToPlayerReq* other);

  // implements Message ----------------------------------------------

  C2S_MailToPlayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_MailToPlayerReq& from);
  void MergeFrom(const C2S_MailToPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required .MAIL.Z2M_Send_System_Mail_Req mail = 2;
  inline bool has_mail() const;
  inline void clear_mail();
  static const int kMailFieldNumber = 2;
  inline const ::MAIL::Z2M_Send_System_Mail_Req& mail() const;
  inline ::MAIL::Z2M_Send_System_Mail_Req* mutable_mail();
  inline ::MAIL::Z2M_Send_System_Mail_Req* release_mail();
  inline void set_allocated_mail(::MAIL::Z2M_Send_System_Mail_Req* mail);

  // @@protoc_insertion_point(class_scope:GM.C2S_MailToPlayerReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_mail();
  inline void clear_has_mail();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::MAIL::Z2M_Send_System_Mail_Req* mail_;
  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_MailToPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_MailToPlayerRsp : public ::google::protobuf::Message {
 public:
  S2C_MailToPlayerRsp();
  virtual ~S2C_MailToPlayerRsp();

  S2C_MailToPlayerRsp(const S2C_MailToPlayerRsp& from);

  inline S2C_MailToPlayerRsp& operator=(const S2C_MailToPlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_MailToPlayerRsp& default_instance();

  void Swap(S2C_MailToPlayerRsp* other);

  // implements Message ----------------------------------------------

  S2C_MailToPlayerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_MailToPlayerRsp& from);
  void MergeFrom(const S2C_MailToPlayerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_MailToPlayerRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_MailToPlayerRsp* default_instance_;
};
// -------------------------------------------------------------------

class TicketChange : public ::google::protobuf::Message {
 public:
  TicketChange();
  virtual ~TicketChange();

  TicketChange(const TicketChange& from);

  inline TicketChange& operator=(const TicketChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TicketChange& default_instance();

  void Swap(TicketChange* other);

  // implements Message ----------------------------------------------

  TicketChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TicketChange& from);
  void MergeFrom(const TicketChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ticket_type = 1;
  inline bool has_ticket_type() const;
  inline void clear_ticket_type();
  static const int kTicketTypeFieldNumber = 1;
  inline ::google::protobuf::int32 ticket_type() const;
  inline void set_ticket_type(::google::protobuf::int32 value);

  // required int32 ticket_count = 2;
  inline bool has_ticket_count() const;
  inline void clear_ticket_count();
  static const int kTicketCountFieldNumber = 2;
  inline ::google::protobuf::int32 ticket_count() const;
  inline void set_ticket_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.TicketChange)
 private:
  inline void set_has_ticket_type();
  inline void clear_has_ticket_type();
  inline void set_has_ticket_count();
  inline void clear_has_ticket_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ticket_type_;
  ::google::protobuf::int32 ticket_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static TicketChange* default_instance_;
};
// -------------------------------------------------------------------

class CardChange : public ::google::protobuf::Message {
 public:
  CardChange();
  virtual ~CardChange();

  CardChange(const CardChange& from);

  inline CardChange& operator=(const CardChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CardChange& default_instance();

  void Swap(CardChange* other);

  // implements Message ----------------------------------------------

  CardChange* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardChange& from);
  void MergeFrom(const CardChange& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 card_id = 1;
  inline bool has_card_id() const;
  inline void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  inline ::google::protobuf::int32 card_id() const;
  inline void set_card_id(::google::protobuf::int32 value);

  // required int32 change_type = 2;
  inline bool has_change_type() const;
  inline void clear_change_type();
  static const int kChangeTypeFieldNumber = 2;
  inline ::google::protobuf::int32 change_type() const;
  inline void set_change_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.CardChange)
 private:
  inline void set_has_card_id();
  inline void clear_has_card_id();
  inline void set_has_change_type();
  inline void clear_has_change_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 card_id_;
  ::google::protobuf::int32 change_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static CardChange* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ModifyPlayerDataReq : public ::google::protobuf::Message {
 public:
  C2S_ModifyPlayerDataReq();
  virtual ~C2S_ModifyPlayerDataReq();

  C2S_ModifyPlayerDataReq(const C2S_ModifyPlayerDataReq& from);

  inline C2S_ModifyPlayerDataReq& operator=(const C2S_ModifyPlayerDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ModifyPlayerDataReq& default_instance();

  void Swap(C2S_ModifyPlayerDataReq* other);

  // implements Message ----------------------------------------------

  C2S_ModifyPlayerDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ModifyPlayerDataReq& from);
  void MergeFrom(const C2S_ModifyPlayerDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // required int32 flag = 2;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 2;
  inline ::google::protobuf::int32 flag() const;
  inline void set_flag(::google::protobuf::int32 value);

  // optional int32 marbel_change = 3;
  inline bool has_marbel_change() const;
  inline void clear_marbel_change();
  static const int kMarbelChangeFieldNumber = 3;
  inline ::google::protobuf::int32 marbel_change() const;
  inline void set_marbel_change(::google::protobuf::int32 value);

  // optional int32 goldcoin_change = 4;
  inline bool has_goldcoin_change() const;
  inline void clear_goldcoin_change();
  static const int kGoldcoinChangeFieldNumber = 4;
  inline ::google::protobuf::int32 goldcoin_change() const;
  inline void set_goldcoin_change(::google::protobuf::int32 value);

  // optional int32 energy_change = 5;
  inline bool has_energy_change() const;
  inline void clear_energy_change();
  static const int kEnergyChangeFieldNumber = 5;
  inline ::google::protobuf::int32 energy_change() const;
  inline void set_energy_change(::google::protobuf::int32 value);

  // repeated .GM.TicketChange ticket_change = 6;
  inline int ticket_change_size() const;
  inline void clear_ticket_change();
  static const int kTicketChangeFieldNumber = 6;
  inline const ::GM::TicketChange& ticket_change(int index) const;
  inline ::GM::TicketChange* mutable_ticket_change(int index);
  inline ::GM::TicketChange* add_ticket_change();
  inline const ::google::protobuf::RepeatedPtrField< ::GM::TicketChange >&
      ticket_change() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM::TicketChange >*
      mutable_ticket_change();

  // repeated .GM.CardChange card_change = 7;
  inline int card_change_size() const;
  inline void clear_card_change();
  static const int kCardChangeFieldNumber = 7;
  inline const ::GM::CardChange& card_change(int index) const;
  inline ::GM::CardChange* mutable_card_change(int index);
  inline ::GM::CardChange* add_card_change();
  inline const ::google::protobuf::RepeatedPtrField< ::GM::CardChange >&
      card_change() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM::CardChange >*
      mutable_card_change();

  // @@protoc_insertion_point(class_scope:GM.C2S_ModifyPlayerDataReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_marbel_change();
  inline void clear_has_marbel_change();
  inline void set_has_goldcoin_change();
  inline void clear_has_goldcoin_change();
  inline void set_has_energy_change();
  inline void clear_has_energy_change();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 flag_;
  ::google::protobuf::int32 marbel_change_;
  ::google::protobuf::int32 goldcoin_change_;
  ::google::protobuf::RepeatedPtrField< ::GM::TicketChange > ticket_change_;
  ::google::protobuf::RepeatedPtrField< ::GM::CardChange > card_change_;
  ::google::protobuf::int32 energy_change_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_ModifyPlayerDataReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ModifyPlayerDataRsp : public ::google::protobuf::Message {
 public:
  S2C_ModifyPlayerDataRsp();
  virtual ~S2C_ModifyPlayerDataRsp();

  S2C_ModifyPlayerDataRsp(const S2C_ModifyPlayerDataRsp& from);

  inline S2C_ModifyPlayerDataRsp& operator=(const S2C_ModifyPlayerDataRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ModifyPlayerDataRsp& default_instance();

  void Swap(S2C_ModifyPlayerDataRsp* other);

  // implements Message ----------------------------------------------

  S2C_ModifyPlayerDataRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ModifyPlayerDataRsp& from);
  void MergeFrom(const S2C_ModifyPlayerDataRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // optional .DBCACHE.Player new_player_data = 2;
  inline bool has_new_player_data() const;
  inline void clear_new_player_data();
  static const int kNewPlayerDataFieldNumber = 2;
  inline const ::DBCACHE::Player& new_player_data() const;
  inline ::DBCACHE::Player* mutable_new_player_data();
  inline ::DBCACHE::Player* release_new_player_data();
  inline void set_allocated_new_player_data(::DBCACHE::Player* new_player_data);

  // @@protoc_insertion_point(class_scope:GM.S2C_ModifyPlayerDataRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_new_player_data();
  inline void clear_has_new_player_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::DBCACHE::Player* new_player_data_;
  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_ModifyPlayerDataRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ServerStatisticsReq : public ::google::protobuf::Message {
 public:
  C2S_ServerStatisticsReq();
  virtual ~C2S_ServerStatisticsReq();

  C2S_ServerStatisticsReq(const C2S_ServerStatisticsReq& from);

  inline C2S_ServerStatisticsReq& operator=(const C2S_ServerStatisticsReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ServerStatisticsReq& default_instance();

  void Swap(C2S_ServerStatisticsReq* other);

  // implements Message ----------------------------------------------

  C2S_ServerStatisticsReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ServerStatisticsReq& from);
  void MergeFrom(const C2S_ServerStatisticsReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 statistics_type = 1;
  inline bool has_statistics_type() const;
  inline void clear_statistics_type();
  static const int kStatisticsTypeFieldNumber = 1;
  inline ::google::protobuf::int32 statistics_type() const;
  inline void set_statistics_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_ServerStatisticsReq)
 private:
  inline void set_has_statistics_type();
  inline void clear_has_statistics_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 statistics_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_ServerStatisticsReq* default_instance_;
};
// -------------------------------------------------------------------

class Statistics_Server : public ::google::protobuf::Message {
 public:
  Statistics_Server();
  virtual ~Statistics_Server();

  Statistics_Server(const Statistics_Server& from);

  inline Statistics_Server& operator=(const Statistics_Server& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Statistics_Server& default_instance();

  void Swap(Statistics_Server* other);

  // implements Message ----------------------------------------------

  Statistics_Server* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Statistics_Server& from);
  void MergeFrom(const Statistics_Server& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::uint32 server_id() const;
  inline void set_server_id(::google::protobuf::uint32 value);

  // required uint32 server_type = 2;
  inline bool has_server_type() const;
  inline void clear_server_type();
  static const int kServerTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 server_type() const;
  inline void set_server_type(::google::protobuf::uint32 value);

  // required int32 server_status = 3;
  inline bool has_server_status() const;
  inline void clear_server_status();
  static const int kServerStatusFieldNumber = 3;
  inline ::google::protobuf::int32 server_status() const;
  inline void set_server_status(::google::protobuf::int32 value);

  // required string server_ip = 4;
  inline bool has_server_ip() const;
  inline void clear_server_ip();
  static const int kServerIpFieldNumber = 4;
  inline const ::std::string& server_ip() const;
  inline void set_server_ip(const ::std::string& value);
  inline void set_server_ip(const char* value);
  inline void set_server_ip(const char* value, size_t size);
  inline ::std::string* mutable_server_ip();
  inline ::std::string* release_server_ip();
  inline void set_allocated_server_ip(::std::string* server_ip);

  // required uint32 server_port = 5;
  inline bool has_server_port() const;
  inline void clear_server_port();
  static const int kServerPortFieldNumber = 5;
  inline ::google::protobuf::uint32 server_port() const;
  inline void set_server_port(::google::protobuf::uint32 value);

  // required uint32 active_players = 6;
  inline bool has_active_players() const;
  inline void clear_active_players();
  static const int kActivePlayersFieldNumber = 6;
  inline ::google::protobuf::uint32 active_players() const;
  inline void set_active_players(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:GM.Statistics_Server)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_server_type();
  inline void clear_has_server_type();
  inline void set_has_server_status();
  inline void clear_has_server_status();
  inline void set_has_server_ip();
  inline void clear_has_server_ip();
  inline void set_has_server_port();
  inline void clear_has_server_port();
  inline void set_has_active_players();
  inline void clear_has_active_players();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 server_id_;
  ::google::protobuf::uint32 server_type_;
  ::std::string* server_ip_;
  ::google::protobuf::int32 server_status_;
  ::google::protobuf::uint32 server_port_;
  ::google::protobuf::uint32 active_players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static Statistics_Server* default_instance_;
};
// -------------------------------------------------------------------

class Statistics_Online : public ::google::protobuf::Message {
 public:
  Statistics_Online();
  virtual ~Statistics_Online();

  Statistics_Online(const Statistics_Online& from);

  inline Statistics_Online& operator=(const Statistics_Online& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Statistics_Online& default_instance();

  void Swap(Statistics_Online* other);

  // implements Message ----------------------------------------------

  Statistics_Online* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Statistics_Online& from);
  void MergeFrom(const Statistics_Online& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 online_players = 1;
  inline bool has_online_players() const;
  inline void clear_online_players();
  static const int kOnlinePlayersFieldNumber = 1;
  inline ::google::protobuf::uint32 online_players() const;
  inline void set_online_players(::google::protobuf::uint32 value);

  // required uint32 ingame_players = 2;
  inline bool has_ingame_players() const;
  inline void clear_ingame_players();
  static const int kIngamePlayersFieldNumber = 2;
  inline ::google::protobuf::uint32 ingame_players() const;
  inline void set_ingame_players(::google::protobuf::uint32 value);

  // required uint32 playing_players = 3;
  inline bool has_playing_players() const;
  inline void clear_playing_players();
  static const int kPlayingPlayersFieldNumber = 3;
  inline ::google::protobuf::uint32 playing_players() const;
  inline void set_playing_players(::google::protobuf::uint32 value);

  // repeated .GM.Statistics_Server server_list = 4;
  inline int server_list_size() const;
  inline void clear_server_list();
  static const int kServerListFieldNumber = 4;
  inline const ::GM::Statistics_Server& server_list(int index) const;
  inline ::GM::Statistics_Server* mutable_server_list(int index);
  inline ::GM::Statistics_Server* add_server_list();
  inline const ::google::protobuf::RepeatedPtrField< ::GM::Statistics_Server >&
      server_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::GM::Statistics_Server >*
      mutable_server_list();

  // @@protoc_insertion_point(class_scope:GM.Statistics_Online)
 private:
  inline void set_has_online_players();
  inline void clear_has_online_players();
  inline void set_has_ingame_players();
  inline void clear_has_ingame_players();
  inline void set_has_playing_players();
  inline void clear_has_playing_players();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 online_players_;
  ::google::protobuf::uint32 ingame_players_;
  ::google::protobuf::RepeatedPtrField< ::GM::Statistics_Server > server_list_;
  ::google::protobuf::uint32 playing_players_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static Statistics_Online* default_instance_;
};
// -------------------------------------------------------------------

class Statistics_Runtime : public ::google::protobuf::Message {
 public:
  Statistics_Runtime();
  virtual ~Statistics_Runtime();

  Statistics_Runtime(const Statistics_Runtime& from);

  inline Statistics_Runtime& operator=(const Statistics_Runtime& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Statistics_Runtime& default_instance();

  void Swap(Statistics_Runtime* other);

  // implements Message ----------------------------------------------

  Statistics_Runtime* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Statistics_Runtime& from);
  void MergeFrom(const Statistics_Runtime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 launch_time = 1;
  inline bool has_launch_time() const;
  inline void clear_launch_time();
  static const int kLaunchTimeFieldNumber = 1;
  inline ::google::protobuf::uint64 launch_time() const;
  inline void set_launch_time(::google::protobuf::uint64 value);

  // required uint64 run_time = 2;
  inline bool has_run_time() const;
  inline void clear_run_time();
  static const int kRunTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 run_time() const;
  inline void set_run_time(::google::protobuf::uint64 value);

  // required uint64 net_out_size = 3;
  inline bool has_net_out_size() const;
  inline void clear_net_out_size();
  static const int kNetOutSizeFieldNumber = 3;
  inline ::google::protobuf::uint64 net_out_size() const;
  inline void set_net_out_size(::google::protobuf::uint64 value);

  // required uint64 net_in_size = 4;
  inline bool has_net_in_size() const;
  inline void clear_net_in_size();
  static const int kNetInSizeFieldNumber = 4;
  inline ::google::protobuf::uint64 net_in_size() const;
  inline void set_net_in_size(::google::protobuf::uint64 value);

  // required uint64 mem_used = 5;
  inline bool has_mem_used() const;
  inline void clear_mem_used();
  static const int kMemUsedFieldNumber = 5;
  inline ::google::protobuf::uint64 mem_used() const;
  inline void set_mem_used(::google::protobuf::uint64 value);

  // required uint64 cpu_used = 6;
  inline bool has_cpu_used() const;
  inline void clear_cpu_used();
  static const int kCpuUsedFieldNumber = 6;
  inline ::google::protobuf::uint64 cpu_used() const;
  inline void set_cpu_used(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GM.Statistics_Runtime)
 private:
  inline void set_has_launch_time();
  inline void clear_has_launch_time();
  inline void set_has_run_time();
  inline void clear_has_run_time();
  inline void set_has_net_out_size();
  inline void clear_has_net_out_size();
  inline void set_has_net_in_size();
  inline void clear_has_net_in_size();
  inline void set_has_mem_used();
  inline void clear_has_mem_used();
  inline void set_has_cpu_used();
  inline void clear_has_cpu_used();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 launch_time_;
  ::google::protobuf::uint64 run_time_;
  ::google::protobuf::uint64 net_out_size_;
  ::google::protobuf::uint64 net_in_size_;
  ::google::protobuf::uint64 mem_used_;
  ::google::protobuf::uint64 cpu_used_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static Statistics_Runtime* default_instance_;
};
// -------------------------------------------------------------------

class Statistics_System : public ::google::protobuf::Message {
 public:
  Statistics_System();
  virtual ~Statistics_System();

  Statistics_System(const Statistics_System& from);

  inline Statistics_System& operator=(const Statistics_System& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Statistics_System& default_instance();

  void Swap(Statistics_System* other);

  // implements Message ----------------------------------------------

  Statistics_System* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Statistics_System& from);
  void MergeFrom(const Statistics_System& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 sys_mem_used = 1;
  inline bool has_sys_mem_used() const;
  inline void clear_sys_mem_used();
  static const int kSysMemUsedFieldNumber = 1;
  inline ::google::protobuf::uint64 sys_mem_used() const;
  inline void set_sys_mem_used(::google::protobuf::uint64 value);

  // required uint64 sys_cpu_used = 2;
  inline bool has_sys_cpu_used() const;
  inline void clear_sys_cpu_used();
  static const int kSysCpuUsedFieldNumber = 2;
  inline ::google::protobuf::uint64 sys_cpu_used() const;
  inline void set_sys_cpu_used(::google::protobuf::uint64 value);

  // required uint64 sys_disk_used = 3;
  inline bool has_sys_disk_used() const;
  inline void clear_sys_disk_used();
  static const int kSysDiskUsedFieldNumber = 3;
  inline ::google::protobuf::uint64 sys_disk_used() const;
  inline void set_sys_disk_used(::google::protobuf::uint64 value);

  // required uint64 sys_mem_free = 4;
  inline bool has_sys_mem_free() const;
  inline void clear_sys_mem_free();
  static const int kSysMemFreeFieldNumber = 4;
  inline ::google::protobuf::uint64 sys_mem_free() const;
  inline void set_sys_mem_free(::google::protobuf::uint64 value);

  // required uint64 sys_cpu_free = 5;
  inline bool has_sys_cpu_free() const;
  inline void clear_sys_cpu_free();
  static const int kSysCpuFreeFieldNumber = 5;
  inline ::google::protobuf::uint64 sys_cpu_free() const;
  inline void set_sys_cpu_free(::google::protobuf::uint64 value);

  // required uint64 sys_disk_free = 6;
  inline bool has_sys_disk_free() const;
  inline void clear_sys_disk_free();
  static const int kSysDiskFreeFieldNumber = 6;
  inline ::google::protobuf::uint64 sys_disk_free() const;
  inline void set_sys_disk_free(::google::protobuf::uint64 value);

  // required uint64 net_recv = 7;
  inline bool has_net_recv() const;
  inline void clear_net_recv();
  static const int kNetRecvFieldNumber = 7;
  inline ::google::protobuf::uint64 net_recv() const;
  inline void set_net_recv(::google::protobuf::uint64 value);

  // required uint64 net_send = 8;
  inline bool has_net_send() const;
  inline void clear_net_send();
  static const int kNetSendFieldNumber = 8;
  inline ::google::protobuf::uint64 net_send() const;
  inline void set_net_send(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:GM.Statistics_System)
 private:
  inline void set_has_sys_mem_used();
  inline void clear_has_sys_mem_used();
  inline void set_has_sys_cpu_used();
  inline void clear_has_sys_cpu_used();
  inline void set_has_sys_disk_used();
  inline void clear_has_sys_disk_used();
  inline void set_has_sys_mem_free();
  inline void clear_has_sys_mem_free();
  inline void set_has_sys_cpu_free();
  inline void clear_has_sys_cpu_free();
  inline void set_has_sys_disk_free();
  inline void clear_has_sys_disk_free();
  inline void set_has_net_recv();
  inline void clear_has_net_recv();
  inline void set_has_net_send();
  inline void clear_has_net_send();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 sys_mem_used_;
  ::google::protobuf::uint64 sys_cpu_used_;
  ::google::protobuf::uint64 sys_disk_used_;
  ::google::protobuf::uint64 sys_mem_free_;
  ::google::protobuf::uint64 sys_cpu_free_;
  ::google::protobuf::uint64 sys_disk_free_;
  ::google::protobuf::uint64 net_recv_;
  ::google::protobuf::uint64 net_send_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static Statistics_System* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ServerStatisticsRsp : public ::google::protobuf::Message {
 public:
  S2C_ServerStatisticsRsp();
  virtual ~S2C_ServerStatisticsRsp();

  S2C_ServerStatisticsRsp(const S2C_ServerStatisticsRsp& from);

  inline S2C_ServerStatisticsRsp& operator=(const S2C_ServerStatisticsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ServerStatisticsRsp& default_instance();

  void Swap(S2C_ServerStatisticsRsp* other);

  // implements Message ----------------------------------------------

  S2C_ServerStatisticsRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ServerStatisticsRsp& from);
  void MergeFrom(const S2C_ServerStatisticsRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_status = 1;
  inline bool has_server_status() const;
  inline void clear_server_status();
  static const int kServerStatusFieldNumber = 1;
  inline ::google::protobuf::int32 server_status() const;
  inline void set_server_status(::google::protobuf::int32 value);

  // optional .GM.Statistics_Online online = 2;
  inline bool has_online() const;
  inline void clear_online();
  static const int kOnlineFieldNumber = 2;
  inline const ::GM::Statistics_Online& online() const;
  inline ::GM::Statistics_Online* mutable_online();
  inline ::GM::Statistics_Online* release_online();
  inline void set_allocated_online(::GM::Statistics_Online* online);

  // optional .GM.Statistics_Runtime runtime = 3;
  inline bool has_runtime() const;
  inline void clear_runtime();
  static const int kRuntimeFieldNumber = 3;
  inline const ::GM::Statistics_Runtime& runtime() const;
  inline ::GM::Statistics_Runtime* mutable_runtime();
  inline ::GM::Statistics_Runtime* release_runtime();
  inline void set_allocated_runtime(::GM::Statistics_Runtime* runtime);

  // optional .GM.Statistics_System system = 4;
  inline bool has_system() const;
  inline void clear_system();
  static const int kSystemFieldNumber = 4;
  inline const ::GM::Statistics_System& system() const;
  inline ::GM::Statistics_System* mutable_system();
  inline ::GM::Statistics_System* release_system();
  inline void set_allocated_system(::GM::Statistics_System* system);

  // optional string statistics = 5;
  inline bool has_statistics() const;
  inline void clear_statistics();
  static const int kStatisticsFieldNumber = 5;
  inline const ::std::string& statistics() const;
  inline void set_statistics(const ::std::string& value);
  inline void set_statistics(const char* value);
  inline void set_statistics(const char* value, size_t size);
  inline ::std::string* mutable_statistics();
  inline ::std::string* release_statistics();
  inline void set_allocated_statistics(::std::string* statistics);

  // @@protoc_insertion_point(class_scope:GM.S2C_ServerStatisticsRsp)
 private:
  inline void set_has_server_status();
  inline void clear_has_server_status();
  inline void set_has_online();
  inline void clear_has_online();
  inline void set_has_runtime();
  inline void clear_has_runtime();
  inline void set_has_system();
  inline void clear_has_system();
  inline void set_has_statistics();
  inline void clear_has_statistics();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::GM::Statistics_Online* online_;
  ::GM::Statistics_Runtime* runtime_;
  ::GM::Statistics_System* system_;
  ::std::string* statistics_;
  ::google::protobuf::int32 server_status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_ServerStatisticsRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ResetServerStatusReq : public ::google::protobuf::Message {
 public:
  C2S_ResetServerStatusReq();
  virtual ~C2S_ResetServerStatusReq();

  C2S_ResetServerStatusReq(const C2S_ResetServerStatusReq& from);

  inline C2S_ResetServerStatusReq& operator=(const C2S_ResetServerStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ResetServerStatusReq& default_instance();

  void Swap(C2S_ResetServerStatusReq* other);

  // implements Message ----------------------------------------------

  C2S_ResetServerStatusReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ResetServerStatusReq& from);
  void MergeFrom(const C2S_ResetServerStatusReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_ResetServerStatusReq)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_ResetServerStatusReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ResetServerStatusRsp : public ::google::protobuf::Message {
 public:
  S2C_ResetServerStatusRsp();
  virtual ~S2C_ResetServerStatusRsp();

  S2C_ResetServerStatusRsp(const S2C_ResetServerStatusRsp& from);

  inline S2C_ResetServerStatusRsp& operator=(const S2C_ResetServerStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ResetServerStatusRsp& default_instance();

  void Swap(S2C_ResetServerStatusRsp* other);

  // implements Message ----------------------------------------------

  S2C_ResetServerStatusRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ResetServerStatusRsp& from);
  void MergeFrom(const S2C_ResetServerStatusRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_ResetServerStatusRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_ResetServerStatusRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_ControlServerReq : public ::google::protobuf::Message {
 public:
  C2S_ControlServerReq();
  virtual ~C2S_ControlServerReq();

  C2S_ControlServerReq(const C2S_ControlServerReq& from);

  inline C2S_ControlServerReq& operator=(const C2S_ControlServerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_ControlServerReq& default_instance();

  void Swap(C2S_ControlServerReq* other);

  // implements Message ----------------------------------------------

  C2S_ControlServerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_ControlServerReq& from);
  void MergeFrom(const C2S_ControlServerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 server_id = 1;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // required int32 control_type = 2;
  inline bool has_control_type() const;
  inline void clear_control_type();
  static const int kControlTypeFieldNumber = 2;
  inline ::google::protobuf::int32 control_type() const;
  inline void set_control_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_ControlServerReq)
 private:
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_control_type();
  inline void clear_has_control_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 control_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_ControlServerReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_ControlServerRsp : public ::google::protobuf::Message {
 public:
  S2C_ControlServerRsp();
  virtual ~S2C_ControlServerRsp();

  S2C_ControlServerRsp(const S2C_ControlServerRsp& from);

  inline S2C_ControlServerRsp& operator=(const S2C_ControlServerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_ControlServerRsp& default_instance();

  void Swap(S2C_ControlServerRsp* other);

  // implements Message ----------------------------------------------

  S2C_ControlServerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_ControlServerRsp& from);
  void MergeFrom(const S2C_ControlServerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_ControlServerRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_ControlServerRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_BanPlayerReq : public ::google::protobuf::Message {
 public:
  C2S_BanPlayerReq();
  virtual ~C2S_BanPlayerReq();

  C2S_BanPlayerReq(const C2S_BanPlayerReq& from);

  inline C2S_BanPlayerReq& operator=(const C2S_BanPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_BanPlayerReq& default_instance();

  void Swap(C2S_BanPlayerReq* other);

  // implements Message ----------------------------------------------

  C2S_BanPlayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_BanPlayerReq& from);
  void MergeFrom(const C2S_BanPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // optional int32 ban_days = 2;
  inline bool has_ban_days() const;
  inline void clear_ban_days();
  static const int kBanDaysFieldNumber = 2;
  inline ::google::protobuf::int32 ban_days() const;
  inline void set_ban_days(::google::protobuf::int32 value);

  // optional int32 ban_reason = 3;
  inline bool has_ban_reason() const;
  inline void clear_ban_reason();
  static const int kBanReasonFieldNumber = 3;
  inline ::google::protobuf::int32 ban_reason() const;
  inline void set_ban_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_BanPlayerReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();
  inline void set_has_ban_days();
  inline void clear_has_ban_days();
  inline void set_has_ban_reason();
  inline void clear_has_ban_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 ban_days_;
  ::google::protobuf::int32 ban_reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_BanPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_BanPlayerRsp : public ::google::protobuf::Message {
 public:
  S2C_BanPlayerRsp();
  virtual ~S2C_BanPlayerRsp();

  S2C_BanPlayerRsp(const S2C_BanPlayerRsp& from);

  inline S2C_BanPlayerRsp& operator=(const S2C_BanPlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_BanPlayerRsp& default_instance();

  void Swap(S2C_BanPlayerRsp* other);

  // implements Message ----------------------------------------------

  S2C_BanPlayerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_BanPlayerRsp& from);
  void MergeFrom(const S2C_BanPlayerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_BanPlayerRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_BanPlayerRsp* default_instance_;
};
// -------------------------------------------------------------------

class C2S_UnBanPlayerReq : public ::google::protobuf::Message {
 public:
  C2S_UnBanPlayerReq();
  virtual ~C2S_UnBanPlayerReq();

  C2S_UnBanPlayerReq(const C2S_UnBanPlayerReq& from);

  inline C2S_UnBanPlayerReq& operator=(const C2S_UnBanPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const C2S_UnBanPlayerReq& default_instance();

  void Swap(C2S_UnBanPlayerReq* other);

  // implements Message ----------------------------------------------

  C2S_UnBanPlayerReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const C2S_UnBanPlayerReq& from);
  void MergeFrom(const C2S_UnBanPlayerReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 player_id = 1;
  inline bool has_player_id() const;
  inline void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 player_id() const;
  inline void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.C2S_UnBanPlayerReq)
 private:
  inline void set_has_player_id();
  inline void clear_has_player_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 player_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static C2S_UnBanPlayerReq* default_instance_;
};
// -------------------------------------------------------------------

class S2C_UnBanPlayerRsp : public ::google::protobuf::Message {
 public:
  S2C_UnBanPlayerRsp();
  virtual ~S2C_UnBanPlayerRsp();

  S2C_UnBanPlayerRsp(const S2C_UnBanPlayerRsp& from);

  inline S2C_UnBanPlayerRsp& operator=(const S2C_UnBanPlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const S2C_UnBanPlayerRsp& default_instance();

  void Swap(S2C_UnBanPlayerRsp* other);

  // implements Message ----------------------------------------------

  S2C_UnBanPlayerRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const S2C_UnBanPlayerRsp& from);
  void MergeFrom(const S2C_UnBanPlayerRsp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::google::protobuf::int32 ret_code() const;
  inline void set_ret_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GM.S2C_UnBanPlayerRsp)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_gm_2eproto();
  friend void protobuf_AssignDesc_gm_2eproto();
  friend void protobuf_ShutdownFile_gm_2eproto();

  void InitAsDefaultInstance();
  static S2C_UnBanPlayerRsp* default_instance_;
};
// ===================================================================


// ===================================================================

// C2S_RandEventReq

// required int32 event_id = 1;
inline bool C2S_RandEventReq::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_RandEventReq::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_RandEventReq::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_RandEventReq::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::google::protobuf::int32 C2S_RandEventReq::event_id() const {
  return event_id_;
}
inline void C2S_RandEventReq::set_event_id(::google::protobuf::int32 value) {
  set_has_event_id();
  event_id_ = value;
}

// -------------------------------------------------------------------

// C2S_QueryPlayerDataReq

// required int32 player_id = 1;
inline bool C2S_QueryPlayerDataReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_QueryPlayerDataReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_QueryPlayerDataReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_QueryPlayerDataReq::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 C2S_QueryPlayerDataReq::player_id() const {
  return player_id_;
}
inline void C2S_QueryPlayerDataReq::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// S2C_QueryPlayerDataRsp

// required int32 ret_code = 1;
inline bool S2C_QueryPlayerDataRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_QueryPlayerDataRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_QueryPlayerDataRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// required int32 player_id = 2;
inline bool S2C_QueryPlayerDataRsp::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_QueryPlayerDataRsp::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::player_id() const {
  return player_id_;
}
inline void S2C_QueryPlayerDataRsp::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 player_status = 3;
inline bool S2C_QueryPlayerDataRsp::has_player_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_player_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_player_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_QueryPlayerDataRsp::clear_player_status() {
  player_status_ = 0;
  clear_has_player_status();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::player_status() const {
  return player_status_;
}
inline void S2C_QueryPlayerDataRsp::set_player_status(::google::protobuf::int32 value) {
  set_has_player_status();
  player_status_ = value;
}

// optional int32 zone_id = 4;
inline bool S2C_QueryPlayerDataRsp::has_zone_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_zone_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_zone_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_QueryPlayerDataRsp::clear_zone_id() {
  zone_id_ = 0;
  clear_has_zone_id();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::zone_id() const {
  return zone_id_;
}
inline void S2C_QueryPlayerDataRsp::set_zone_id(::google::protobuf::int32 value) {
  set_has_zone_id();
  zone_id_ = value;
}

// optional int32 gamesrv_id = 5;
inline bool S2C_QueryPlayerDataRsp::has_gamesrv_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_gamesrv_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_gamesrv_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_QueryPlayerDataRsp::clear_gamesrv_id() {
  gamesrv_id_ = 0;
  clear_has_gamesrv_id();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::gamesrv_id() const {
  return gamesrv_id_;
}
inline void S2C_QueryPlayerDataRsp::set_gamesrv_id(::google::protobuf::int32 value) {
  set_has_gamesrv_id();
  gamesrv_id_ = value;
}

// optional int32 room_number = 6;
inline bool S2C_QueryPlayerDataRsp::has_room_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_room_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_room_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void S2C_QueryPlayerDataRsp::clear_room_number() {
  room_number_ = 0;
  clear_has_room_number();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::room_number() const {
  return room_number_;
}
inline void S2C_QueryPlayerDataRsp::set_room_number(::google::protobuf::int32 value) {
  set_has_room_number();
  room_number_ = value;
}

// optional int32 seat_number = 7;
inline bool S2C_QueryPlayerDataRsp::has_seat_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_seat_number() {
  _has_bits_[0] |= 0x00000040u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_seat_number() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void S2C_QueryPlayerDataRsp::clear_seat_number() {
  seat_number_ = 0;
  clear_has_seat_number();
}
inline ::google::protobuf::int32 S2C_QueryPlayerDataRsp::seat_number() const {
  return seat_number_;
}
inline void S2C_QueryPlayerDataRsp::set_seat_number(::google::protobuf::int32 value) {
  set_has_seat_number();
  seat_number_ = value;
}

// optional .DBCACHE.Player player_data = 8;
inline bool S2C_QueryPlayerDataRsp::has_player_data() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void S2C_QueryPlayerDataRsp::set_has_player_data() {
  _has_bits_[0] |= 0x00000080u;
}
inline void S2C_QueryPlayerDataRsp::clear_has_player_data() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void S2C_QueryPlayerDataRsp::clear_player_data() {
  if (player_data_ != NULL) player_data_->::DBCACHE::Player::Clear();
  clear_has_player_data();
}
inline const ::DBCACHE::Player& S2C_QueryPlayerDataRsp::player_data() const {
  return player_data_ != NULL ? *player_data_ : *default_instance_->player_data_;
}
inline ::DBCACHE::Player* S2C_QueryPlayerDataRsp::mutable_player_data() {
  set_has_player_data();
  if (player_data_ == NULL) player_data_ = new ::DBCACHE::Player;
  return player_data_;
}
inline ::DBCACHE::Player* S2C_QueryPlayerDataRsp::release_player_data() {
  clear_has_player_data();
  ::DBCACHE::Player* temp = player_data_;
  player_data_ = NULL;
  return temp;
}
inline void S2C_QueryPlayerDataRsp::set_allocated_player_data(::DBCACHE::Player* player_data) {
  delete player_data_;
  player_data_ = player_data;
  if (player_data) {
    set_has_player_data();
  } else {
    clear_has_player_data();
  }
}

// -------------------------------------------------------------------

// C2S_OnlinePlayerListReq

// -------------------------------------------------------------------

// S2C_OnlinePlayerListRsp

// repeated .DBCACHE.PlayerBaseInfo player = 1;
inline int S2C_OnlinePlayerListRsp::player_size() const {
  return player_.size();
}
inline void S2C_OnlinePlayerListRsp::clear_player() {
  player_.Clear();
}
inline const ::DBCACHE::PlayerBaseInfo& S2C_OnlinePlayerListRsp::player(int index) const {
  return player_.Get(index);
}
inline ::DBCACHE::PlayerBaseInfo* S2C_OnlinePlayerListRsp::mutable_player(int index) {
  return player_.Mutable(index);
}
inline ::DBCACHE::PlayerBaseInfo* S2C_OnlinePlayerListRsp::add_player() {
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::DBCACHE::PlayerBaseInfo >&
S2C_OnlinePlayerListRsp::player() const {
  return player_;
}
inline ::google::protobuf::RepeatedPtrField< ::DBCACHE::PlayerBaseInfo >*
S2C_OnlinePlayerListRsp::mutable_player() {
  return &player_;
}

// -------------------------------------------------------------------

// C2S_BroadcastMailReq

// required .MAIL.Z2M_Send_System_Mail_Req mail = 1;
inline bool C2S_BroadcastMailReq::has_mail() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BroadcastMailReq::set_has_mail() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BroadcastMailReq::clear_has_mail() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BroadcastMailReq::clear_mail() {
  if (mail_ != NULL) mail_->::MAIL::Z2M_Send_System_Mail_Req::Clear();
  clear_has_mail();
}
inline const ::MAIL::Z2M_Send_System_Mail_Req& C2S_BroadcastMailReq::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MAIL::Z2M_Send_System_Mail_Req* C2S_BroadcastMailReq::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MAIL::Z2M_Send_System_Mail_Req;
  return mail_;
}
inline ::MAIL::Z2M_Send_System_Mail_Req* C2S_BroadcastMailReq::release_mail() {
  clear_has_mail();
  ::MAIL::Z2M_Send_System_Mail_Req* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void C2S_BroadcastMailReq::set_allocated_mail(::MAIL::Z2M_Send_System_Mail_Req* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// S2C_BroadcastMailRsp

// required int32 ret_code = 1;
inline bool S2C_BroadcastMailRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BroadcastMailRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BroadcastMailRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BroadcastMailRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_BroadcastMailRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_BroadcastMailRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// C2S_MailToPlayerReq

// required int32 player_id = 1;
inline bool C2S_MailToPlayerReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_MailToPlayerReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_MailToPlayerReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_MailToPlayerReq::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 C2S_MailToPlayerReq::player_id() const {
  return player_id_;
}
inline void C2S_MailToPlayerReq::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required .MAIL.Z2M_Send_System_Mail_Req mail = 2;
inline bool C2S_MailToPlayerReq::has_mail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_MailToPlayerReq::set_has_mail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_MailToPlayerReq::clear_has_mail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_MailToPlayerReq::clear_mail() {
  if (mail_ != NULL) mail_->::MAIL::Z2M_Send_System_Mail_Req::Clear();
  clear_has_mail();
}
inline const ::MAIL::Z2M_Send_System_Mail_Req& C2S_MailToPlayerReq::mail() const {
  return mail_ != NULL ? *mail_ : *default_instance_->mail_;
}
inline ::MAIL::Z2M_Send_System_Mail_Req* C2S_MailToPlayerReq::mutable_mail() {
  set_has_mail();
  if (mail_ == NULL) mail_ = new ::MAIL::Z2M_Send_System_Mail_Req;
  return mail_;
}
inline ::MAIL::Z2M_Send_System_Mail_Req* C2S_MailToPlayerReq::release_mail() {
  clear_has_mail();
  ::MAIL::Z2M_Send_System_Mail_Req* temp = mail_;
  mail_ = NULL;
  return temp;
}
inline void C2S_MailToPlayerReq::set_allocated_mail(::MAIL::Z2M_Send_System_Mail_Req* mail) {
  delete mail_;
  mail_ = mail;
  if (mail) {
    set_has_mail();
  } else {
    clear_has_mail();
  }
}

// -------------------------------------------------------------------

// S2C_MailToPlayerRsp

// required int32 ret_code = 1;
inline bool S2C_MailToPlayerRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_MailToPlayerRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_MailToPlayerRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_MailToPlayerRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_MailToPlayerRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_MailToPlayerRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// TicketChange

// required int32 ticket_type = 1;
inline bool TicketChange::has_ticket_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TicketChange::set_has_ticket_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TicketChange::clear_has_ticket_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TicketChange::clear_ticket_type() {
  ticket_type_ = 0;
  clear_has_ticket_type();
}
inline ::google::protobuf::int32 TicketChange::ticket_type() const {
  return ticket_type_;
}
inline void TicketChange::set_ticket_type(::google::protobuf::int32 value) {
  set_has_ticket_type();
  ticket_type_ = value;
}

// required int32 ticket_count = 2;
inline bool TicketChange::has_ticket_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TicketChange::set_has_ticket_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TicketChange::clear_has_ticket_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TicketChange::clear_ticket_count() {
  ticket_count_ = 0;
  clear_has_ticket_count();
}
inline ::google::protobuf::int32 TicketChange::ticket_count() const {
  return ticket_count_;
}
inline void TicketChange::set_ticket_count(::google::protobuf::int32 value) {
  set_has_ticket_count();
  ticket_count_ = value;
}

// -------------------------------------------------------------------

// CardChange

// required int32 card_id = 1;
inline bool CardChange::has_card_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CardChange::set_has_card_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CardChange::clear_has_card_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CardChange::clear_card_id() {
  card_id_ = 0;
  clear_has_card_id();
}
inline ::google::protobuf::int32 CardChange::card_id() const {
  return card_id_;
}
inline void CardChange::set_card_id(::google::protobuf::int32 value) {
  set_has_card_id();
  card_id_ = value;
}

// required int32 change_type = 2;
inline bool CardChange::has_change_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CardChange::set_has_change_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CardChange::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CardChange::clear_change_type() {
  change_type_ = 0;
  clear_has_change_type();
}
inline ::google::protobuf::int32 CardChange::change_type() const {
  return change_type_;
}
inline void CardChange::set_change_type(::google::protobuf::int32 value) {
  set_has_change_type();
  change_type_ = value;
}

// -------------------------------------------------------------------

// C2S_ModifyPlayerDataReq

// required int32 player_id = 1;
inline bool C2S_ModifyPlayerDataReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ModifyPlayerDataReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ModifyPlayerDataReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ModifyPlayerDataReq::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 C2S_ModifyPlayerDataReq::player_id() const {
  return player_id_;
}
inline void C2S_ModifyPlayerDataReq::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// required int32 flag = 2;
inline bool C2S_ModifyPlayerDataReq::has_flag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_ModifyPlayerDataReq::set_has_flag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_ModifyPlayerDataReq::clear_has_flag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_ModifyPlayerDataReq::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 C2S_ModifyPlayerDataReq::flag() const {
  return flag_;
}
inline void C2S_ModifyPlayerDataReq::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
}

// optional int32 marbel_change = 3;
inline bool C2S_ModifyPlayerDataReq::has_marbel_change() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_ModifyPlayerDataReq::set_has_marbel_change() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_ModifyPlayerDataReq::clear_has_marbel_change() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_ModifyPlayerDataReq::clear_marbel_change() {
  marbel_change_ = 0;
  clear_has_marbel_change();
}
inline ::google::protobuf::int32 C2S_ModifyPlayerDataReq::marbel_change() const {
  return marbel_change_;
}
inline void C2S_ModifyPlayerDataReq::set_marbel_change(::google::protobuf::int32 value) {
  set_has_marbel_change();
  marbel_change_ = value;
}

// optional int32 goldcoin_change = 4;
inline bool C2S_ModifyPlayerDataReq::has_goldcoin_change() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void C2S_ModifyPlayerDataReq::set_has_goldcoin_change() {
  _has_bits_[0] |= 0x00000008u;
}
inline void C2S_ModifyPlayerDataReq::clear_has_goldcoin_change() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void C2S_ModifyPlayerDataReq::clear_goldcoin_change() {
  goldcoin_change_ = 0;
  clear_has_goldcoin_change();
}
inline ::google::protobuf::int32 C2S_ModifyPlayerDataReq::goldcoin_change() const {
  return goldcoin_change_;
}
inline void C2S_ModifyPlayerDataReq::set_goldcoin_change(::google::protobuf::int32 value) {
  set_has_goldcoin_change();
  goldcoin_change_ = value;
}

// optional int32 energy_change = 5;
inline bool C2S_ModifyPlayerDataReq::has_energy_change() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void C2S_ModifyPlayerDataReq::set_has_energy_change() {
  _has_bits_[0] |= 0x00000010u;
}
inline void C2S_ModifyPlayerDataReq::clear_has_energy_change() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void C2S_ModifyPlayerDataReq::clear_energy_change() {
  energy_change_ = 0;
  clear_has_energy_change();
}
inline ::google::protobuf::int32 C2S_ModifyPlayerDataReq::energy_change() const {
  return energy_change_;
}
inline void C2S_ModifyPlayerDataReq::set_energy_change(::google::protobuf::int32 value) {
  set_has_energy_change();
  energy_change_ = value;
}

// repeated .GM.TicketChange ticket_change = 6;
inline int C2S_ModifyPlayerDataReq::ticket_change_size() const {
  return ticket_change_.size();
}
inline void C2S_ModifyPlayerDataReq::clear_ticket_change() {
  ticket_change_.Clear();
}
inline const ::GM::TicketChange& C2S_ModifyPlayerDataReq::ticket_change(int index) const {
  return ticket_change_.Get(index);
}
inline ::GM::TicketChange* C2S_ModifyPlayerDataReq::mutable_ticket_change(int index) {
  return ticket_change_.Mutable(index);
}
inline ::GM::TicketChange* C2S_ModifyPlayerDataReq::add_ticket_change() {
  return ticket_change_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM::TicketChange >&
C2S_ModifyPlayerDataReq::ticket_change() const {
  return ticket_change_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM::TicketChange >*
C2S_ModifyPlayerDataReq::mutable_ticket_change() {
  return &ticket_change_;
}

// repeated .GM.CardChange card_change = 7;
inline int C2S_ModifyPlayerDataReq::card_change_size() const {
  return card_change_.size();
}
inline void C2S_ModifyPlayerDataReq::clear_card_change() {
  card_change_.Clear();
}
inline const ::GM::CardChange& C2S_ModifyPlayerDataReq::card_change(int index) const {
  return card_change_.Get(index);
}
inline ::GM::CardChange* C2S_ModifyPlayerDataReq::mutable_card_change(int index) {
  return card_change_.Mutable(index);
}
inline ::GM::CardChange* C2S_ModifyPlayerDataReq::add_card_change() {
  return card_change_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM::CardChange >&
C2S_ModifyPlayerDataReq::card_change() const {
  return card_change_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM::CardChange >*
C2S_ModifyPlayerDataReq::mutable_card_change() {
  return &card_change_;
}

// -------------------------------------------------------------------

// S2C_ModifyPlayerDataRsp

// required int32 ret_code = 1;
inline bool S2C_ModifyPlayerDataRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ModifyPlayerDataRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ModifyPlayerDataRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ModifyPlayerDataRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_ModifyPlayerDataRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_ModifyPlayerDataRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// optional .DBCACHE.Player new_player_data = 2;
inline bool S2C_ModifyPlayerDataRsp::has_new_player_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_ModifyPlayerDataRsp::set_has_new_player_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_ModifyPlayerDataRsp::clear_has_new_player_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_ModifyPlayerDataRsp::clear_new_player_data() {
  if (new_player_data_ != NULL) new_player_data_->::DBCACHE::Player::Clear();
  clear_has_new_player_data();
}
inline const ::DBCACHE::Player& S2C_ModifyPlayerDataRsp::new_player_data() const {
  return new_player_data_ != NULL ? *new_player_data_ : *default_instance_->new_player_data_;
}
inline ::DBCACHE::Player* S2C_ModifyPlayerDataRsp::mutable_new_player_data() {
  set_has_new_player_data();
  if (new_player_data_ == NULL) new_player_data_ = new ::DBCACHE::Player;
  return new_player_data_;
}
inline ::DBCACHE::Player* S2C_ModifyPlayerDataRsp::release_new_player_data() {
  clear_has_new_player_data();
  ::DBCACHE::Player* temp = new_player_data_;
  new_player_data_ = NULL;
  return temp;
}
inline void S2C_ModifyPlayerDataRsp::set_allocated_new_player_data(::DBCACHE::Player* new_player_data) {
  delete new_player_data_;
  new_player_data_ = new_player_data;
  if (new_player_data) {
    set_has_new_player_data();
  } else {
    clear_has_new_player_data();
  }
}

// -------------------------------------------------------------------

// C2S_ServerStatisticsReq

// required int32 statistics_type = 1;
inline bool C2S_ServerStatisticsReq::has_statistics_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ServerStatisticsReq::set_has_statistics_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ServerStatisticsReq::clear_has_statistics_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ServerStatisticsReq::clear_statistics_type() {
  statistics_type_ = 0;
  clear_has_statistics_type();
}
inline ::google::protobuf::int32 C2S_ServerStatisticsReq::statistics_type() const {
  return statistics_type_;
}
inline void C2S_ServerStatisticsReq::set_statistics_type(::google::protobuf::int32 value) {
  set_has_statistics_type();
  statistics_type_ = value;
}

// -------------------------------------------------------------------

// Statistics_Server

// required uint32 server_id = 1;
inline bool Statistics_Server::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Statistics_Server::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Statistics_Server::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Statistics_Server::clear_server_id() {
  server_id_ = 0u;
  clear_has_server_id();
}
inline ::google::protobuf::uint32 Statistics_Server::server_id() const {
  return server_id_;
}
inline void Statistics_Server::set_server_id(::google::protobuf::uint32 value) {
  set_has_server_id();
  server_id_ = value;
}

// required uint32 server_type = 2;
inline bool Statistics_Server::has_server_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Statistics_Server::set_has_server_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Statistics_Server::clear_has_server_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Statistics_Server::clear_server_type() {
  server_type_ = 0u;
  clear_has_server_type();
}
inline ::google::protobuf::uint32 Statistics_Server::server_type() const {
  return server_type_;
}
inline void Statistics_Server::set_server_type(::google::protobuf::uint32 value) {
  set_has_server_type();
  server_type_ = value;
}

// required int32 server_status = 3;
inline bool Statistics_Server::has_server_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Statistics_Server::set_has_server_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Statistics_Server::clear_has_server_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Statistics_Server::clear_server_status() {
  server_status_ = 0;
  clear_has_server_status();
}
inline ::google::protobuf::int32 Statistics_Server::server_status() const {
  return server_status_;
}
inline void Statistics_Server::set_server_status(::google::protobuf::int32 value) {
  set_has_server_status();
  server_status_ = value;
}

// required string server_ip = 4;
inline bool Statistics_Server::has_server_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Statistics_Server::set_has_server_ip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Statistics_Server::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Statistics_Server::clear_server_ip() {
  if (server_ip_ != &::google::protobuf::internal::kEmptyString) {
    server_ip_->clear();
  }
  clear_has_server_ip();
}
inline const ::std::string& Statistics_Server::server_ip() const {
  return *server_ip_;
}
inline void Statistics_Server::set_server_ip(const ::std::string& value) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::kEmptyString) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(value);
}
inline void Statistics_Server::set_server_ip(const char* value) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::kEmptyString) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(value);
}
inline void Statistics_Server::set_server_ip(const char* value, size_t size) {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::kEmptyString) {
    server_ip_ = new ::std::string;
  }
  server_ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Statistics_Server::mutable_server_ip() {
  set_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::kEmptyString) {
    server_ip_ = new ::std::string;
  }
  return server_ip_;
}
inline ::std::string* Statistics_Server::release_server_ip() {
  clear_has_server_ip();
  if (server_ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = server_ip_;
    server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Statistics_Server::set_allocated_server_ip(::std::string* server_ip) {
  if (server_ip_ != &::google::protobuf::internal::kEmptyString) {
    delete server_ip_;
  }
  if (server_ip) {
    set_has_server_ip();
    server_ip_ = server_ip;
  } else {
    clear_has_server_ip();
    server_ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 server_port = 5;
inline bool Statistics_Server::has_server_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Statistics_Server::set_has_server_port() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Statistics_Server::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Statistics_Server::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
inline ::google::protobuf::uint32 Statistics_Server::server_port() const {
  return server_port_;
}
inline void Statistics_Server::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
}

// required uint32 active_players = 6;
inline bool Statistics_Server::has_active_players() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Statistics_Server::set_has_active_players() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Statistics_Server::clear_has_active_players() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Statistics_Server::clear_active_players() {
  active_players_ = 0u;
  clear_has_active_players();
}
inline ::google::protobuf::uint32 Statistics_Server::active_players() const {
  return active_players_;
}
inline void Statistics_Server::set_active_players(::google::protobuf::uint32 value) {
  set_has_active_players();
  active_players_ = value;
}

// -------------------------------------------------------------------

// Statistics_Online

// required uint32 online_players = 1;
inline bool Statistics_Online::has_online_players() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Statistics_Online::set_has_online_players() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Statistics_Online::clear_has_online_players() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Statistics_Online::clear_online_players() {
  online_players_ = 0u;
  clear_has_online_players();
}
inline ::google::protobuf::uint32 Statistics_Online::online_players() const {
  return online_players_;
}
inline void Statistics_Online::set_online_players(::google::protobuf::uint32 value) {
  set_has_online_players();
  online_players_ = value;
}

// required uint32 ingame_players = 2;
inline bool Statistics_Online::has_ingame_players() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Statistics_Online::set_has_ingame_players() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Statistics_Online::clear_has_ingame_players() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Statistics_Online::clear_ingame_players() {
  ingame_players_ = 0u;
  clear_has_ingame_players();
}
inline ::google::protobuf::uint32 Statistics_Online::ingame_players() const {
  return ingame_players_;
}
inline void Statistics_Online::set_ingame_players(::google::protobuf::uint32 value) {
  set_has_ingame_players();
  ingame_players_ = value;
}

// required uint32 playing_players = 3;
inline bool Statistics_Online::has_playing_players() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Statistics_Online::set_has_playing_players() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Statistics_Online::clear_has_playing_players() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Statistics_Online::clear_playing_players() {
  playing_players_ = 0u;
  clear_has_playing_players();
}
inline ::google::protobuf::uint32 Statistics_Online::playing_players() const {
  return playing_players_;
}
inline void Statistics_Online::set_playing_players(::google::protobuf::uint32 value) {
  set_has_playing_players();
  playing_players_ = value;
}

// repeated .GM.Statistics_Server server_list = 4;
inline int Statistics_Online::server_list_size() const {
  return server_list_.size();
}
inline void Statistics_Online::clear_server_list() {
  server_list_.Clear();
}
inline const ::GM::Statistics_Server& Statistics_Online::server_list(int index) const {
  return server_list_.Get(index);
}
inline ::GM::Statistics_Server* Statistics_Online::mutable_server_list(int index) {
  return server_list_.Mutable(index);
}
inline ::GM::Statistics_Server* Statistics_Online::add_server_list() {
  return server_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GM::Statistics_Server >&
Statistics_Online::server_list() const {
  return server_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::GM::Statistics_Server >*
Statistics_Online::mutable_server_list() {
  return &server_list_;
}

// -------------------------------------------------------------------

// Statistics_Runtime

// required uint64 launch_time = 1;
inline bool Statistics_Runtime::has_launch_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Statistics_Runtime::set_has_launch_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Statistics_Runtime::clear_has_launch_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Statistics_Runtime::clear_launch_time() {
  launch_time_ = GOOGLE_ULONGLONG(0);
  clear_has_launch_time();
}
inline ::google::protobuf::uint64 Statistics_Runtime::launch_time() const {
  return launch_time_;
}
inline void Statistics_Runtime::set_launch_time(::google::protobuf::uint64 value) {
  set_has_launch_time();
  launch_time_ = value;
}

// required uint64 run_time = 2;
inline bool Statistics_Runtime::has_run_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Statistics_Runtime::set_has_run_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Statistics_Runtime::clear_has_run_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Statistics_Runtime::clear_run_time() {
  run_time_ = GOOGLE_ULONGLONG(0);
  clear_has_run_time();
}
inline ::google::protobuf::uint64 Statistics_Runtime::run_time() const {
  return run_time_;
}
inline void Statistics_Runtime::set_run_time(::google::protobuf::uint64 value) {
  set_has_run_time();
  run_time_ = value;
}

// required uint64 net_out_size = 3;
inline bool Statistics_Runtime::has_net_out_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Statistics_Runtime::set_has_net_out_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Statistics_Runtime::clear_has_net_out_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Statistics_Runtime::clear_net_out_size() {
  net_out_size_ = GOOGLE_ULONGLONG(0);
  clear_has_net_out_size();
}
inline ::google::protobuf::uint64 Statistics_Runtime::net_out_size() const {
  return net_out_size_;
}
inline void Statistics_Runtime::set_net_out_size(::google::protobuf::uint64 value) {
  set_has_net_out_size();
  net_out_size_ = value;
}

// required uint64 net_in_size = 4;
inline bool Statistics_Runtime::has_net_in_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Statistics_Runtime::set_has_net_in_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Statistics_Runtime::clear_has_net_in_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Statistics_Runtime::clear_net_in_size() {
  net_in_size_ = GOOGLE_ULONGLONG(0);
  clear_has_net_in_size();
}
inline ::google::protobuf::uint64 Statistics_Runtime::net_in_size() const {
  return net_in_size_;
}
inline void Statistics_Runtime::set_net_in_size(::google::protobuf::uint64 value) {
  set_has_net_in_size();
  net_in_size_ = value;
}

// required uint64 mem_used = 5;
inline bool Statistics_Runtime::has_mem_used() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Statistics_Runtime::set_has_mem_used() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Statistics_Runtime::clear_has_mem_used() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Statistics_Runtime::clear_mem_used() {
  mem_used_ = GOOGLE_ULONGLONG(0);
  clear_has_mem_used();
}
inline ::google::protobuf::uint64 Statistics_Runtime::mem_used() const {
  return mem_used_;
}
inline void Statistics_Runtime::set_mem_used(::google::protobuf::uint64 value) {
  set_has_mem_used();
  mem_used_ = value;
}

// required uint64 cpu_used = 6;
inline bool Statistics_Runtime::has_cpu_used() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Statistics_Runtime::set_has_cpu_used() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Statistics_Runtime::clear_has_cpu_used() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Statistics_Runtime::clear_cpu_used() {
  cpu_used_ = GOOGLE_ULONGLONG(0);
  clear_has_cpu_used();
}
inline ::google::protobuf::uint64 Statistics_Runtime::cpu_used() const {
  return cpu_used_;
}
inline void Statistics_Runtime::set_cpu_used(::google::protobuf::uint64 value) {
  set_has_cpu_used();
  cpu_used_ = value;
}

// -------------------------------------------------------------------

// Statistics_System

// required uint64 sys_mem_used = 1;
inline bool Statistics_System::has_sys_mem_used() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Statistics_System::set_has_sys_mem_used() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Statistics_System::clear_has_sys_mem_used() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Statistics_System::clear_sys_mem_used() {
  sys_mem_used_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_mem_used();
}
inline ::google::protobuf::uint64 Statistics_System::sys_mem_used() const {
  return sys_mem_used_;
}
inline void Statistics_System::set_sys_mem_used(::google::protobuf::uint64 value) {
  set_has_sys_mem_used();
  sys_mem_used_ = value;
}

// required uint64 sys_cpu_used = 2;
inline bool Statistics_System::has_sys_cpu_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Statistics_System::set_has_sys_cpu_used() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Statistics_System::clear_has_sys_cpu_used() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Statistics_System::clear_sys_cpu_used() {
  sys_cpu_used_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_cpu_used();
}
inline ::google::protobuf::uint64 Statistics_System::sys_cpu_used() const {
  return sys_cpu_used_;
}
inline void Statistics_System::set_sys_cpu_used(::google::protobuf::uint64 value) {
  set_has_sys_cpu_used();
  sys_cpu_used_ = value;
}

// required uint64 sys_disk_used = 3;
inline bool Statistics_System::has_sys_disk_used() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Statistics_System::set_has_sys_disk_used() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Statistics_System::clear_has_sys_disk_used() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Statistics_System::clear_sys_disk_used() {
  sys_disk_used_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_disk_used();
}
inline ::google::protobuf::uint64 Statistics_System::sys_disk_used() const {
  return sys_disk_used_;
}
inline void Statistics_System::set_sys_disk_used(::google::protobuf::uint64 value) {
  set_has_sys_disk_used();
  sys_disk_used_ = value;
}

// required uint64 sys_mem_free = 4;
inline bool Statistics_System::has_sys_mem_free() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Statistics_System::set_has_sys_mem_free() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Statistics_System::clear_has_sys_mem_free() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Statistics_System::clear_sys_mem_free() {
  sys_mem_free_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_mem_free();
}
inline ::google::protobuf::uint64 Statistics_System::sys_mem_free() const {
  return sys_mem_free_;
}
inline void Statistics_System::set_sys_mem_free(::google::protobuf::uint64 value) {
  set_has_sys_mem_free();
  sys_mem_free_ = value;
}

// required uint64 sys_cpu_free = 5;
inline bool Statistics_System::has_sys_cpu_free() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Statistics_System::set_has_sys_cpu_free() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Statistics_System::clear_has_sys_cpu_free() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Statistics_System::clear_sys_cpu_free() {
  sys_cpu_free_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_cpu_free();
}
inline ::google::protobuf::uint64 Statistics_System::sys_cpu_free() const {
  return sys_cpu_free_;
}
inline void Statistics_System::set_sys_cpu_free(::google::protobuf::uint64 value) {
  set_has_sys_cpu_free();
  sys_cpu_free_ = value;
}

// required uint64 sys_disk_free = 6;
inline bool Statistics_System::has_sys_disk_free() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Statistics_System::set_has_sys_disk_free() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Statistics_System::clear_has_sys_disk_free() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Statistics_System::clear_sys_disk_free() {
  sys_disk_free_ = GOOGLE_ULONGLONG(0);
  clear_has_sys_disk_free();
}
inline ::google::protobuf::uint64 Statistics_System::sys_disk_free() const {
  return sys_disk_free_;
}
inline void Statistics_System::set_sys_disk_free(::google::protobuf::uint64 value) {
  set_has_sys_disk_free();
  sys_disk_free_ = value;
}

// required uint64 net_recv = 7;
inline bool Statistics_System::has_net_recv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Statistics_System::set_has_net_recv() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Statistics_System::clear_has_net_recv() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Statistics_System::clear_net_recv() {
  net_recv_ = GOOGLE_ULONGLONG(0);
  clear_has_net_recv();
}
inline ::google::protobuf::uint64 Statistics_System::net_recv() const {
  return net_recv_;
}
inline void Statistics_System::set_net_recv(::google::protobuf::uint64 value) {
  set_has_net_recv();
  net_recv_ = value;
}

// required uint64 net_send = 8;
inline bool Statistics_System::has_net_send() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Statistics_System::set_has_net_send() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Statistics_System::clear_has_net_send() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Statistics_System::clear_net_send() {
  net_send_ = GOOGLE_ULONGLONG(0);
  clear_has_net_send();
}
inline ::google::protobuf::uint64 Statistics_System::net_send() const {
  return net_send_;
}
inline void Statistics_System::set_net_send(::google::protobuf::uint64 value) {
  set_has_net_send();
  net_send_ = value;
}

// -------------------------------------------------------------------

// S2C_ServerStatisticsRsp

// required int32 server_status = 1;
inline bool S2C_ServerStatisticsRsp::has_server_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ServerStatisticsRsp::set_has_server_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ServerStatisticsRsp::clear_has_server_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ServerStatisticsRsp::clear_server_status() {
  server_status_ = 0;
  clear_has_server_status();
}
inline ::google::protobuf::int32 S2C_ServerStatisticsRsp::server_status() const {
  return server_status_;
}
inline void S2C_ServerStatisticsRsp::set_server_status(::google::protobuf::int32 value) {
  set_has_server_status();
  server_status_ = value;
}

// optional .GM.Statistics_Online online = 2;
inline bool S2C_ServerStatisticsRsp::has_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void S2C_ServerStatisticsRsp::set_has_online() {
  _has_bits_[0] |= 0x00000002u;
}
inline void S2C_ServerStatisticsRsp::clear_has_online() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void S2C_ServerStatisticsRsp::clear_online() {
  if (online_ != NULL) online_->::GM::Statistics_Online::Clear();
  clear_has_online();
}
inline const ::GM::Statistics_Online& S2C_ServerStatisticsRsp::online() const {
  return online_ != NULL ? *online_ : *default_instance_->online_;
}
inline ::GM::Statistics_Online* S2C_ServerStatisticsRsp::mutable_online() {
  set_has_online();
  if (online_ == NULL) online_ = new ::GM::Statistics_Online;
  return online_;
}
inline ::GM::Statistics_Online* S2C_ServerStatisticsRsp::release_online() {
  clear_has_online();
  ::GM::Statistics_Online* temp = online_;
  online_ = NULL;
  return temp;
}
inline void S2C_ServerStatisticsRsp::set_allocated_online(::GM::Statistics_Online* online) {
  delete online_;
  online_ = online;
  if (online) {
    set_has_online();
  } else {
    clear_has_online();
  }
}

// optional .GM.Statistics_Runtime runtime = 3;
inline bool S2C_ServerStatisticsRsp::has_runtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void S2C_ServerStatisticsRsp::set_has_runtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void S2C_ServerStatisticsRsp::clear_has_runtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void S2C_ServerStatisticsRsp::clear_runtime() {
  if (runtime_ != NULL) runtime_->::GM::Statistics_Runtime::Clear();
  clear_has_runtime();
}
inline const ::GM::Statistics_Runtime& S2C_ServerStatisticsRsp::runtime() const {
  return runtime_ != NULL ? *runtime_ : *default_instance_->runtime_;
}
inline ::GM::Statistics_Runtime* S2C_ServerStatisticsRsp::mutable_runtime() {
  set_has_runtime();
  if (runtime_ == NULL) runtime_ = new ::GM::Statistics_Runtime;
  return runtime_;
}
inline ::GM::Statistics_Runtime* S2C_ServerStatisticsRsp::release_runtime() {
  clear_has_runtime();
  ::GM::Statistics_Runtime* temp = runtime_;
  runtime_ = NULL;
  return temp;
}
inline void S2C_ServerStatisticsRsp::set_allocated_runtime(::GM::Statistics_Runtime* runtime) {
  delete runtime_;
  runtime_ = runtime;
  if (runtime) {
    set_has_runtime();
  } else {
    clear_has_runtime();
  }
}

// optional .GM.Statistics_System system = 4;
inline bool S2C_ServerStatisticsRsp::has_system() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void S2C_ServerStatisticsRsp::set_has_system() {
  _has_bits_[0] |= 0x00000008u;
}
inline void S2C_ServerStatisticsRsp::clear_has_system() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void S2C_ServerStatisticsRsp::clear_system() {
  if (system_ != NULL) system_->::GM::Statistics_System::Clear();
  clear_has_system();
}
inline const ::GM::Statistics_System& S2C_ServerStatisticsRsp::system() const {
  return system_ != NULL ? *system_ : *default_instance_->system_;
}
inline ::GM::Statistics_System* S2C_ServerStatisticsRsp::mutable_system() {
  set_has_system();
  if (system_ == NULL) system_ = new ::GM::Statistics_System;
  return system_;
}
inline ::GM::Statistics_System* S2C_ServerStatisticsRsp::release_system() {
  clear_has_system();
  ::GM::Statistics_System* temp = system_;
  system_ = NULL;
  return temp;
}
inline void S2C_ServerStatisticsRsp::set_allocated_system(::GM::Statistics_System* system) {
  delete system_;
  system_ = system;
  if (system) {
    set_has_system();
  } else {
    clear_has_system();
  }
}

// optional string statistics = 5;
inline bool S2C_ServerStatisticsRsp::has_statistics() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void S2C_ServerStatisticsRsp::set_has_statistics() {
  _has_bits_[0] |= 0x00000010u;
}
inline void S2C_ServerStatisticsRsp::clear_has_statistics() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void S2C_ServerStatisticsRsp::clear_statistics() {
  if (statistics_ != &::google::protobuf::internal::kEmptyString) {
    statistics_->clear();
  }
  clear_has_statistics();
}
inline const ::std::string& S2C_ServerStatisticsRsp::statistics() const {
  return *statistics_;
}
inline void S2C_ServerStatisticsRsp::set_statistics(const ::std::string& value) {
  set_has_statistics();
  if (statistics_ == &::google::protobuf::internal::kEmptyString) {
    statistics_ = new ::std::string;
  }
  statistics_->assign(value);
}
inline void S2C_ServerStatisticsRsp::set_statistics(const char* value) {
  set_has_statistics();
  if (statistics_ == &::google::protobuf::internal::kEmptyString) {
    statistics_ = new ::std::string;
  }
  statistics_->assign(value);
}
inline void S2C_ServerStatisticsRsp::set_statistics(const char* value, size_t size) {
  set_has_statistics();
  if (statistics_ == &::google::protobuf::internal::kEmptyString) {
    statistics_ = new ::std::string;
  }
  statistics_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* S2C_ServerStatisticsRsp::mutable_statistics() {
  set_has_statistics();
  if (statistics_ == &::google::protobuf::internal::kEmptyString) {
    statistics_ = new ::std::string;
  }
  return statistics_;
}
inline ::std::string* S2C_ServerStatisticsRsp::release_statistics() {
  clear_has_statistics();
  if (statistics_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = statistics_;
    statistics_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void S2C_ServerStatisticsRsp::set_allocated_statistics(::std::string* statistics) {
  if (statistics_ != &::google::protobuf::internal::kEmptyString) {
    delete statistics_;
  }
  if (statistics) {
    set_has_statistics();
    statistics_ = statistics;
  } else {
    clear_has_statistics();
    statistics_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// C2S_ResetServerStatusReq

// required int32 type = 1;
inline bool C2S_ResetServerStatusReq::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ResetServerStatusReq::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ResetServerStatusReq::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ResetServerStatusReq::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 C2S_ResetServerStatusReq::type() const {
  return type_;
}
inline void C2S_ResetServerStatusReq::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// S2C_ResetServerStatusRsp

// required int32 ret_code = 1;
inline bool S2C_ResetServerStatusRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ResetServerStatusRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ResetServerStatusRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ResetServerStatusRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_ResetServerStatusRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_ResetServerStatusRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// C2S_ControlServerReq

// required int32 server_id = 1;
inline bool C2S_ControlServerReq::has_server_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_ControlServerReq::set_has_server_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_ControlServerReq::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_ControlServerReq::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 C2S_ControlServerReq::server_id() const {
  return server_id_;
}
inline void C2S_ControlServerReq::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// required int32 control_type = 2;
inline bool C2S_ControlServerReq::has_control_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_ControlServerReq::set_has_control_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_ControlServerReq::clear_has_control_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_ControlServerReq::clear_control_type() {
  control_type_ = 0;
  clear_has_control_type();
}
inline ::google::protobuf::int32 C2S_ControlServerReq::control_type() const {
  return control_type_;
}
inline void C2S_ControlServerReq::set_control_type(::google::protobuf::int32 value) {
  set_has_control_type();
  control_type_ = value;
}

// -------------------------------------------------------------------

// S2C_ControlServerRsp

// required int32 ret_code = 1;
inline bool S2C_ControlServerRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_ControlServerRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_ControlServerRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_ControlServerRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_ControlServerRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_ControlServerRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// C2S_BanPlayerReq

// required int32 player_id = 1;
inline bool C2S_BanPlayerReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_BanPlayerReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_BanPlayerReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_BanPlayerReq::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 C2S_BanPlayerReq::player_id() const {
  return player_id_;
}
inline void C2S_BanPlayerReq::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// optional int32 ban_days = 2;
inline bool C2S_BanPlayerReq::has_ban_days() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void C2S_BanPlayerReq::set_has_ban_days() {
  _has_bits_[0] |= 0x00000002u;
}
inline void C2S_BanPlayerReq::clear_has_ban_days() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void C2S_BanPlayerReq::clear_ban_days() {
  ban_days_ = 0;
  clear_has_ban_days();
}
inline ::google::protobuf::int32 C2S_BanPlayerReq::ban_days() const {
  return ban_days_;
}
inline void C2S_BanPlayerReq::set_ban_days(::google::protobuf::int32 value) {
  set_has_ban_days();
  ban_days_ = value;
}

// optional int32 ban_reason = 3;
inline bool C2S_BanPlayerReq::has_ban_reason() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void C2S_BanPlayerReq::set_has_ban_reason() {
  _has_bits_[0] |= 0x00000004u;
}
inline void C2S_BanPlayerReq::clear_has_ban_reason() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void C2S_BanPlayerReq::clear_ban_reason() {
  ban_reason_ = 0;
  clear_has_ban_reason();
}
inline ::google::protobuf::int32 C2S_BanPlayerReq::ban_reason() const {
  return ban_reason_;
}
inline void C2S_BanPlayerReq::set_ban_reason(::google::protobuf::int32 value) {
  set_has_ban_reason();
  ban_reason_ = value;
}

// -------------------------------------------------------------------

// S2C_BanPlayerRsp

// required int32 ret_code = 1;
inline bool S2C_BanPlayerRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_BanPlayerRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_BanPlayerRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_BanPlayerRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_BanPlayerRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_BanPlayerRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// C2S_UnBanPlayerReq

// required int32 player_id = 1;
inline bool C2S_UnBanPlayerReq::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void C2S_UnBanPlayerReq::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void C2S_UnBanPlayerReq::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void C2S_UnBanPlayerReq::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 C2S_UnBanPlayerReq::player_id() const {
  return player_id_;
}
inline void C2S_UnBanPlayerReq::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
}

// -------------------------------------------------------------------

// S2C_UnBanPlayerRsp

// required int32 ret_code = 1;
inline bool S2C_UnBanPlayerRsp::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void S2C_UnBanPlayerRsp::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void S2C_UnBanPlayerRsp::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void S2C_UnBanPlayerRsp::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::google::protobuf::int32 S2C_UnBanPlayerRsp::ret_code() const {
  return ret_code_;
}
inline void S2C_UnBanPlayerRsp::set_ret_code(::google::protobuf::int32 value) {
  set_has_ret_code();
  ret_code_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace GM

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GM::ChangeType>() {
  return ::GM::ChangeType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gm_2eproto__INCLUDED
