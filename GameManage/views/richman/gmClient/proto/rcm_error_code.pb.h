// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rcm_error_code.proto

#ifndef PROTOBUF_rcm_5ferror_5fcode_2eproto__INCLUDED
#define PROTOBUF_rcm_5ferror_5fcode_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rcm {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rcm_5ferror_5fcode_2eproto();
void protobuf_AssignDesc_rcm_5ferror_5fcode_2eproto();
void protobuf_ShutdownFile_rcm_5ferror_5fcode_2eproto();

class RCM_RET;

enum RCM_RET_ErrorCode {
  RCM_RET_ErrorCode_FAIL_INTERNAL_ERROR = -1,
  RCM_RET_ErrorCode_SUCCESS = 0,
  RCM_RET_ErrorCode_ERR_COMMON_BEGIN = 5000,
  RCM_RET_ErrorCode_ERR_COMMON_ENCODE_FAILED = 5001,
  RCM_RET_ErrorCode_ERR_COMMON_DECODE_FAILED = 5002,
  RCM_RET_ErrorCode_ERR_COMMON_END = 9999,
  RCM_RET_ErrorCode_ERR_ZONE_BEGIN = 80000,
  RCM_RET_ErrorCode_ERR_STORE_SYSTEM = 80001,
  RCM_RET_ErrorCode_ERR_STORE_PRICE = 80002,
  RCM_RET_ErrorCode_ERR_STORE_PAYTYPE = 80003,
  RCM_RET_ErrorCode_ERR_STORE_BALANCE = 80004,
  RCM_RET_ErrorCode_ERR_STORE_GOOD_NOT_EXIST = 80005,
  RCM_RET_ErrorCode_ERR_STORE_SEX = 80006,
  RCM_RET_ErrorCode_ERR_STORE_TOO_MUCH_GOODS = 80007,
  RCM_RET_ErrorCode_ERR_STORE_PRESENT_RECEIVER_NOT_TNTER = 80008,
  RCM_RET_ErrorCode_ERR_STORE_PRESENT_SELF = 80009,
  RCM_RET_ErrorCode_ERR_STORE_CREATE_BILL = 80010,
  RCM_RET_ErrorCode_ERR_STORE_PRESENT_GAME_CURRENCY = 80011,
  RCM_RET_ErrorCode_ERR_STORE_PRESENT_RECEIVER_SEX = 80012,
  RCM_RET_ErrorCode_ERR_STORE_CAN_NOT_RECHARGE = 80013,
  RCM_RET_ErrorCode_ERR_PORTAL_PRICE = 80021,
  RCM_RET_ErrorCode_ERR_PORTAL_PROVIDE = 80022,
  RCM_RET_ErrorCode_ERR_PORTAL_NOT_EXIST = 80023,
  RCM_RET_ErrorCode_ERR_PORTAL_FREEZE = 80024,
  RCM_RET_ErrorCode_ERR_PORTAL_LOSS = 80025,
  RCM_RET_ErrorCode_ERR_PORTAL_BALANCE = 80026,
  RCM_RET_ErrorCode_ERR_PORTAL_PAYLIMIT = 80027,
  RCM_RET_ErrorCode_ERR_PORTAL_DAYLIMIT = 80028,
  RCM_RET_ErrorCode_ERR_PORTAL_TOTAL_ENOUGH = 80029,
  RCM_RET_ErrorCode_ERR_PORTAL_NOT_FRIENDS_7DAY = 80030,
  RCM_RET_ErrorCode_ERR_PORTAL_OTHER_ERROR = 80031,
  RCM_RET_ErrorCode_ERR_EXCHANGE_ID_NOT_EXIST = 80040,
  RCM_RET_ErrorCode_ERR_EXCHANGE_MODE_NOT_EXIST = 80041,
  RCM_RET_ErrorCode_ERR_EXCHANGE_LEVEL_LIMIT = 80042,
  RCM_RET_ErrorCode_ERR_EXCHANGE_NEED_GOODS_NOT_ENOUGH = 80043,
  RCM_RET_ErrorCode_ERR_EXCHANGE_ADD_ITEM_FAILED = 80044,
  RCM_RET_ErrorCode_ERR_EXCHANGE_GP_LIMIT = 80045,
  RCM_RET_ErrorCode_ERR_PACKAGE_IS_FULL = 80050,
  RCM_RET_ErrorCode_ERR_PACKAGE_ITEM_NOT_EXIST = 80051,
  RCM_RET_ErrorCode_ERR_PACKAGE_ITEM_NOT_ENOUGH = 80052,
  RCM_RET_ErrorCode_ERR_TITAN_PARAMETER_ERROR = 80070,
  RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_ITEM_NOT_EXIST = 80071,
  RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_SAMALL_CRYSTAL_NOT_ENOUGH = 80072,
  RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_BIG_CRYSTAL_NOT_ENOUGH = 80073,
  RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_CATALYST_NOT_ENOUGH = 80074,
  RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_SHIELD_NOT_ENOUGH = 80075,
  RCM_RET_ErrorCode_ERR_TITAN_GOODS_TYPE_WRONG = 80076,
  RCM_RET_ErrorCode_ERR_TITAN_LEVEL_IS_MAX = 80077,
  RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_FAILED = 80078,
  RCM_RET_ErrorCode_ERR_TITAN_INSERT_ALREADY = 80079,
  RCM_RET_ErrorCode_ERR_TITAN_REMOVE_NONE = 80080,
  RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_FAILED_AND_DEGRADE = 80081,
  RCM_RET_ErrorCode_ERR_TITAN_GOLD_NOT_ENOUGH = 80082,
  RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_CAN_NOT = 80083,
  RCM_RET_ErrorCode_ERR_LOGIN_NOPLAYER = 80091,
  RCM_RET_ErrorCode_ERR_LOGIN_CLOSE = 80092,
  RCM_RET_ErrorCode_ERR_LOGIN_SERVER_CLOSE = 80093,
  RCM_RET_ErrorCode_ERR_LOGIN_LOADPLAYERFAILED = 80094,
  RCM_RET_ErrorCode_ERR_LOGIN_AREA_FULL = 80095,
  RCM_RET_ErrorCode_ERR_LOGIN_SYSTEM_ERR = 80096,
  RCM_RET_ErrorCode_ERR_LOGIN_NO_AREA = 80097,
  RCM_RET_ErrorCode_ERR_LOGIN_BAN = 80098,
  RCM_RET_ErrorCode_ERR_LOGIN_AREA_AUTO_CHANGE = 80099,
  RCM_RET_ErrorCode_ERR_LOGIN_SERVER_STOPPED = 80100,
  RCM_RET_ErrorCode_ERR_ACTIVITY_ID_NOT_EXIST = 80151,
  RCM_RET_ErrorCode_ERR_ACTIVITY_OVERDUE = 80152,
  RCM_RET_ErrorCode_ERR_ACTIVITY_NOT_ACCORD = 80153,
  RCM_RET_ErrorCode_ERR_ACTIVITY_FILL_LIMIT_ENTRY = 80154,
  RCM_RET_ErrorCode_ERR_ACTIVITY_NOT_ENOUGH_GOODS = 80155,
  RCM_RET_ErrorCode_ERR_ACTIVITY_DEDUCT_GOODS_FAILED = 80156,
  RCM_RET_ErrorCode_ERR_ACTIVITY_ADD_GOODS_FAILED = 80157,
  RCM_RET_ErrorCode_ERR_ACTIVITY_HAD_PLANT = 80158,
  RCM_RET_ErrorCode_ERR_ACTIVITY_NO_SEED = 80159,
  RCM_RET_ErrorCode_ERR_ACTIVITY_NO_HARVEST = 80160,
  RCM_RET_ErrorCode_ERR_ACTIVITY_HARVEST_OVER_ENDTIME = 80161,
  RCM_RET_ErrorCode_ERR_WAREHOUSE_NO_REFRESH_ITEM = 80201,
  RCM_RET_ErrorCode_ERR_WAREHOUSE_ITEM_HAS_EXCHANGED = 80202,
  RCM_RET_ErrorCode_ERR_WAREHOUSE_EXCHANGE_ID_ERR = 80203,
  RCM_RET_ErrorCode_ERR_QQ_FRIEND_INVITE_NUM_LIMIT = 80301,
  RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_NUM_NOT_REACH = 80302,
  RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_ALREADY_RECEIVED = 80303,
  RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_INVITEE_NOT_EXIST = 80304,
  RCM_RET_ErrorCode_ERR_ZONE_END = 89999,
  RCM_RET_ErrorCode_ERR_MATCH_BEGIN = 160000,
  RCM_RET_ErrorCode_ERR_MATCH_START_LEVEL_LIMIT = 160001,
  RCM_RET_ErrorCode_ERR_MATCH_START_QUEUE_FULL = 160002,
  RCM_RET_ErrorCode_ERR_MATCH_START_QUEUED = 160003,
  RCM_RET_ErrorCode_ERR_MATCH_CANCEL_MATCHED = 160004,
  RCM_RET_ErrorCode_ERR_MATCH_RESULT_TIMEOUT = 160005,
  RCM_RET_ErrorCode_ERR_MATCH_START_NOT_BEGIN = 160006,
  RCM_RET_ErrorCode_ERR_MATCH_END = 169999,
  RCM_RET_ErrorCode_ERR_GUILD_BEGIN = 190000,
  RCM_RET_ErrorCode_ERR_GUILD_LEVEL_LIMIT = 190001,
  RCM_RET_ErrorCode_ERR_GUILD_NO_MEDAL = 190002,
  RCM_RET_ErrorCode_ERR_GUILD_NAME_EXIST = 190003,
  RCM_RET_ErrorCode_ERR_GUILD_NONEXIST = 190004,
  RCM_RET_ErrorCode_ERR_GUILD_FULL = 190005,
  RCM_RET_ErrorCode_ERR_GUILD_ALREADY_IN = 190006,
  RCM_RET_ErrorCode_ERR_GUILD_CANNOT_EXIT = 190007,
  RCM_RET_ErrorCode_ERR_GUILD_NOT_IN = 190008,
  RCM_RET_ErrorCode_ERR_GUILD_NO_SUCH_PLAYER = 190009,
  RCM_RET_ErrorCode_ERR_GUILD_TITLE_LIMIT = 190010,
  RCM_RET_ErrorCode_ERR_GUILD_GET_NEW_ID_ERR = 190011,
  RCM_RET_ErrorCode_ERR_GUILD_NO_GUILD_ID = 190012,
  RCM_RET_ErrorCode_ERR_GUILD_GET_INFO_ERR = 190013,
  RCM_RET_ErrorCode_ERR_GUILD_REJECT_TO_JOIN = 190014,
  RCM_RET_ErrorCode_ERR_GUILD_SYSTEM_ERR = 190015,
  RCM_RET_ErrorCode_ERR_GUILD_TITLE_TYPE_ERR = 190016,
  RCM_RET_ErrorCode_ERR_GUILD_ACCEPT_TYPE_ERR = 190017,
  RCM_RET_ErrorCode_ERR_GUILD_HAS_BEEN_DISSOLVE = 190018,
  RCM_RET_ErrorCode_ERR_GUILD_NO_NAME = 190019,
  RCM_RET_ErrorCode_ERR_GUILD_NAME_TOO_LONG = 190020,
  RCM_RET_ErrorCode_ERR_GUILD_DECLARATION_TOO_LONG = 190021,
  RCM_RET_ErrorCode_ERR_GUILD_INVITE_ALEADY_EXIST = 190022,
  RCM_RET_ErrorCode_ERR_GUILD_INVITE_TOO_MUCH = 190023,
  RCM_RET_ErrorCode_ERR_GUILD_NOT_PROCESSING_TRANSFER = 190024,
  RCM_RET_ErrorCode_ERR_GUILD_NOT_PROCESSING_DISSOLVE = 190025,
  RCM_RET_ErrorCode_ERR_GUILD_OPERATION_ON_CHAIRMAN = 190026,
  RCM_RET_ErrorCode_ERR_GUILD_ALEADY_IN_APPROVE_LIST = 190027,
  RCM_RET_ErrorCode_ERR_GUILD_NOT_IN_INVITE_LIST = 190028,
  RCM_RET_ErrorCode_ERR_GUILD_VICE_IS_FULL = 190029,
  RCM_RET_ErrorCode_ERR_GUILD_ELDER_IS_FULL = 190030,
  RCM_RET_ErrorCode_ERR_GUILD_HAS_BEEN_TRANSFER = 190031,
  RCM_RET_ErrorCode_ERR_GUILD_CHAT_ILLEGAL = 190032,
  RCM_RET_ErrorCode_ERR_GUILD_NAME_ILLEGAL = 190033,
  RCM_RET_ErrorCode_ERR_GUILD_DECLARATION_ILLEGAL = 190034,
  RCM_RET_ErrorCode_ERR_GUILD_ANNOUNCEMENT_ILLEGAL = 190035,
  RCM_RET_ErrorCode_ERR_GUILD_NOT_IN_APPROVE_LIST = 190038,
  RCM_RET_ErrorCode_ERR_GUILD_DATA_INLOAD = 190039,
  RCM_RET_ErrorCode_ERR_GUILD_APPROVE_TOO_MUCH = 190040,
  RCM_RET_ErrorCode_ERR_GUILD_QUIT_IN_HALF_DAY = 190041,
  RCM_RET_ErrorCode_ERR_GUILD_END = 199999,
  RCM_RET_ErrorCode_ERR_GAME_BEGIN = 200000,
  RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_SELFKILL = 200001,
  RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_TEAM_SELFKILL = 200002,
  RCM_RET_ErrorCode_ERR_GAME_NO_ENOUGH_NPC_GAME_TICK = 200003,
  RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_NO_MONEY = 200004,
  RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_SYSTEM_ERR = 200005,
  RCM_RET_ErrorCode_ERR_GAME_END = 299999
};
bool RCM_RET_ErrorCode_IsValid(int value);
const RCM_RET_ErrorCode RCM_RET_ErrorCode_ErrorCode_MIN = RCM_RET_ErrorCode_FAIL_INTERNAL_ERROR;
const RCM_RET_ErrorCode RCM_RET_ErrorCode_ErrorCode_MAX = RCM_RET_ErrorCode_ERR_GAME_END;
const int RCM_RET_ErrorCode_ErrorCode_ARRAYSIZE = RCM_RET_ErrorCode_ErrorCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* RCM_RET_ErrorCode_descriptor();
inline const ::std::string& RCM_RET_ErrorCode_Name(RCM_RET_ErrorCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    RCM_RET_ErrorCode_descriptor(), value);
}
inline bool RCM_RET_ErrorCode_Parse(
    const ::std::string& name, RCM_RET_ErrorCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RCM_RET_ErrorCode>(
    RCM_RET_ErrorCode_descriptor(), name, value);
}
// ===================================================================

class RCM_RET : public ::google::protobuf::Message {
 public:
  RCM_RET();
  virtual ~RCM_RET();

  RCM_RET(const RCM_RET& from);

  inline RCM_RET& operator=(const RCM_RET& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RCM_RET& default_instance();

  void Swap(RCM_RET* other);

  // implements Message ----------------------------------------------

  RCM_RET* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RCM_RET& from);
  void MergeFrom(const RCM_RET& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RCM_RET_ErrorCode ErrorCode;
  static const ErrorCode FAIL_INTERNAL_ERROR = RCM_RET_ErrorCode_FAIL_INTERNAL_ERROR;
  static const ErrorCode SUCCESS = RCM_RET_ErrorCode_SUCCESS;
  static const ErrorCode ERR_COMMON_BEGIN = RCM_RET_ErrorCode_ERR_COMMON_BEGIN;
  static const ErrorCode ERR_COMMON_ENCODE_FAILED = RCM_RET_ErrorCode_ERR_COMMON_ENCODE_FAILED;
  static const ErrorCode ERR_COMMON_DECODE_FAILED = RCM_RET_ErrorCode_ERR_COMMON_DECODE_FAILED;
  static const ErrorCode ERR_COMMON_END = RCM_RET_ErrorCode_ERR_COMMON_END;
  static const ErrorCode ERR_ZONE_BEGIN = RCM_RET_ErrorCode_ERR_ZONE_BEGIN;
  static const ErrorCode ERR_STORE_SYSTEM = RCM_RET_ErrorCode_ERR_STORE_SYSTEM;
  static const ErrorCode ERR_STORE_PRICE = RCM_RET_ErrorCode_ERR_STORE_PRICE;
  static const ErrorCode ERR_STORE_PAYTYPE = RCM_RET_ErrorCode_ERR_STORE_PAYTYPE;
  static const ErrorCode ERR_STORE_BALANCE = RCM_RET_ErrorCode_ERR_STORE_BALANCE;
  static const ErrorCode ERR_STORE_GOOD_NOT_EXIST = RCM_RET_ErrorCode_ERR_STORE_GOOD_NOT_EXIST;
  static const ErrorCode ERR_STORE_SEX = RCM_RET_ErrorCode_ERR_STORE_SEX;
  static const ErrorCode ERR_STORE_TOO_MUCH_GOODS = RCM_RET_ErrorCode_ERR_STORE_TOO_MUCH_GOODS;
  static const ErrorCode ERR_STORE_PRESENT_RECEIVER_NOT_TNTER = RCM_RET_ErrorCode_ERR_STORE_PRESENT_RECEIVER_NOT_TNTER;
  static const ErrorCode ERR_STORE_PRESENT_SELF = RCM_RET_ErrorCode_ERR_STORE_PRESENT_SELF;
  static const ErrorCode ERR_STORE_CREATE_BILL = RCM_RET_ErrorCode_ERR_STORE_CREATE_BILL;
  static const ErrorCode ERR_STORE_PRESENT_GAME_CURRENCY = RCM_RET_ErrorCode_ERR_STORE_PRESENT_GAME_CURRENCY;
  static const ErrorCode ERR_STORE_PRESENT_RECEIVER_SEX = RCM_RET_ErrorCode_ERR_STORE_PRESENT_RECEIVER_SEX;
  static const ErrorCode ERR_STORE_CAN_NOT_RECHARGE = RCM_RET_ErrorCode_ERR_STORE_CAN_NOT_RECHARGE;
  static const ErrorCode ERR_PORTAL_PRICE = RCM_RET_ErrorCode_ERR_PORTAL_PRICE;
  static const ErrorCode ERR_PORTAL_PROVIDE = RCM_RET_ErrorCode_ERR_PORTAL_PROVIDE;
  static const ErrorCode ERR_PORTAL_NOT_EXIST = RCM_RET_ErrorCode_ERR_PORTAL_NOT_EXIST;
  static const ErrorCode ERR_PORTAL_FREEZE = RCM_RET_ErrorCode_ERR_PORTAL_FREEZE;
  static const ErrorCode ERR_PORTAL_LOSS = RCM_RET_ErrorCode_ERR_PORTAL_LOSS;
  static const ErrorCode ERR_PORTAL_BALANCE = RCM_RET_ErrorCode_ERR_PORTAL_BALANCE;
  static const ErrorCode ERR_PORTAL_PAYLIMIT = RCM_RET_ErrorCode_ERR_PORTAL_PAYLIMIT;
  static const ErrorCode ERR_PORTAL_DAYLIMIT = RCM_RET_ErrorCode_ERR_PORTAL_DAYLIMIT;
  static const ErrorCode ERR_PORTAL_TOTAL_ENOUGH = RCM_RET_ErrorCode_ERR_PORTAL_TOTAL_ENOUGH;
  static const ErrorCode ERR_PORTAL_NOT_FRIENDS_7DAY = RCM_RET_ErrorCode_ERR_PORTAL_NOT_FRIENDS_7DAY;
  static const ErrorCode ERR_PORTAL_OTHER_ERROR = RCM_RET_ErrorCode_ERR_PORTAL_OTHER_ERROR;
  static const ErrorCode ERR_EXCHANGE_ID_NOT_EXIST = RCM_RET_ErrorCode_ERR_EXCHANGE_ID_NOT_EXIST;
  static const ErrorCode ERR_EXCHANGE_MODE_NOT_EXIST = RCM_RET_ErrorCode_ERR_EXCHANGE_MODE_NOT_EXIST;
  static const ErrorCode ERR_EXCHANGE_LEVEL_LIMIT = RCM_RET_ErrorCode_ERR_EXCHANGE_LEVEL_LIMIT;
  static const ErrorCode ERR_EXCHANGE_NEED_GOODS_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_EXCHANGE_NEED_GOODS_NOT_ENOUGH;
  static const ErrorCode ERR_EXCHANGE_ADD_ITEM_FAILED = RCM_RET_ErrorCode_ERR_EXCHANGE_ADD_ITEM_FAILED;
  static const ErrorCode ERR_EXCHANGE_GP_LIMIT = RCM_RET_ErrorCode_ERR_EXCHANGE_GP_LIMIT;
  static const ErrorCode ERR_PACKAGE_IS_FULL = RCM_RET_ErrorCode_ERR_PACKAGE_IS_FULL;
  static const ErrorCode ERR_PACKAGE_ITEM_NOT_EXIST = RCM_RET_ErrorCode_ERR_PACKAGE_ITEM_NOT_EXIST;
  static const ErrorCode ERR_PACKAGE_ITEM_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_PACKAGE_ITEM_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_PARAMETER_ERROR = RCM_RET_ErrorCode_ERR_TITAN_PARAMETER_ERROR;
  static const ErrorCode ERR_TITAN_PACKAGE_ITEM_NOT_EXIST = RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_ITEM_NOT_EXIST;
  static const ErrorCode ERR_TITAN_PACKAGE_SAMALL_CRYSTAL_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_SAMALL_CRYSTAL_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_PACKAGE_BIG_CRYSTAL_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_BIG_CRYSTAL_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_PACKAGE_CATALYST_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_CATALYST_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_PACKAGE_SHIELD_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_TITAN_PACKAGE_SHIELD_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_GOODS_TYPE_WRONG = RCM_RET_ErrorCode_ERR_TITAN_GOODS_TYPE_WRONG;
  static const ErrorCode ERR_TITAN_LEVEL_IS_MAX = RCM_RET_ErrorCode_ERR_TITAN_LEVEL_IS_MAX;
  static const ErrorCode ERR_TITAN_UPGRADE_FAILED = RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_FAILED;
  static const ErrorCode ERR_TITAN_INSERT_ALREADY = RCM_RET_ErrorCode_ERR_TITAN_INSERT_ALREADY;
  static const ErrorCode ERR_TITAN_REMOVE_NONE = RCM_RET_ErrorCode_ERR_TITAN_REMOVE_NONE;
  static const ErrorCode ERR_TITAN_UPGRADE_FAILED_AND_DEGRADE = RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_FAILED_AND_DEGRADE;
  static const ErrorCode ERR_TITAN_GOLD_NOT_ENOUGH = RCM_RET_ErrorCode_ERR_TITAN_GOLD_NOT_ENOUGH;
  static const ErrorCode ERR_TITAN_UPGRADE_CAN_NOT = RCM_RET_ErrorCode_ERR_TITAN_UPGRADE_CAN_NOT;
  static const ErrorCode ERR_LOGIN_NOPLAYER = RCM_RET_ErrorCode_ERR_LOGIN_NOPLAYER;
  static const ErrorCode ERR_LOGIN_CLOSE = RCM_RET_ErrorCode_ERR_LOGIN_CLOSE;
  static const ErrorCode ERR_LOGIN_SERVER_CLOSE = RCM_RET_ErrorCode_ERR_LOGIN_SERVER_CLOSE;
  static const ErrorCode ERR_LOGIN_LOADPLAYERFAILED = RCM_RET_ErrorCode_ERR_LOGIN_LOADPLAYERFAILED;
  static const ErrorCode ERR_LOGIN_AREA_FULL = RCM_RET_ErrorCode_ERR_LOGIN_AREA_FULL;
  static const ErrorCode ERR_LOGIN_SYSTEM_ERR = RCM_RET_ErrorCode_ERR_LOGIN_SYSTEM_ERR;
  static const ErrorCode ERR_LOGIN_NO_AREA = RCM_RET_ErrorCode_ERR_LOGIN_NO_AREA;
  static const ErrorCode ERR_LOGIN_BAN = RCM_RET_ErrorCode_ERR_LOGIN_BAN;
  static const ErrorCode ERR_LOGIN_AREA_AUTO_CHANGE = RCM_RET_ErrorCode_ERR_LOGIN_AREA_AUTO_CHANGE;
  static const ErrorCode ERR_LOGIN_SERVER_STOPPED = RCM_RET_ErrorCode_ERR_LOGIN_SERVER_STOPPED;
  static const ErrorCode ERR_ACTIVITY_ID_NOT_EXIST = RCM_RET_ErrorCode_ERR_ACTIVITY_ID_NOT_EXIST;
  static const ErrorCode ERR_ACTIVITY_OVERDUE = RCM_RET_ErrorCode_ERR_ACTIVITY_OVERDUE;
  static const ErrorCode ERR_ACTIVITY_NOT_ACCORD = RCM_RET_ErrorCode_ERR_ACTIVITY_NOT_ACCORD;
  static const ErrorCode ERR_ACTIVITY_FILL_LIMIT_ENTRY = RCM_RET_ErrorCode_ERR_ACTIVITY_FILL_LIMIT_ENTRY;
  static const ErrorCode ERR_ACTIVITY_NOT_ENOUGH_GOODS = RCM_RET_ErrorCode_ERR_ACTIVITY_NOT_ENOUGH_GOODS;
  static const ErrorCode ERR_ACTIVITY_DEDUCT_GOODS_FAILED = RCM_RET_ErrorCode_ERR_ACTIVITY_DEDUCT_GOODS_FAILED;
  static const ErrorCode ERR_ACTIVITY_ADD_GOODS_FAILED = RCM_RET_ErrorCode_ERR_ACTIVITY_ADD_GOODS_FAILED;
  static const ErrorCode ERR_ACTIVITY_HAD_PLANT = RCM_RET_ErrorCode_ERR_ACTIVITY_HAD_PLANT;
  static const ErrorCode ERR_ACTIVITY_NO_SEED = RCM_RET_ErrorCode_ERR_ACTIVITY_NO_SEED;
  static const ErrorCode ERR_ACTIVITY_NO_HARVEST = RCM_RET_ErrorCode_ERR_ACTIVITY_NO_HARVEST;
  static const ErrorCode ERR_ACTIVITY_HARVEST_OVER_ENDTIME = RCM_RET_ErrorCode_ERR_ACTIVITY_HARVEST_OVER_ENDTIME;
  static const ErrorCode ERR_WAREHOUSE_NO_REFRESH_ITEM = RCM_RET_ErrorCode_ERR_WAREHOUSE_NO_REFRESH_ITEM;
  static const ErrorCode ERR_WAREHOUSE_ITEM_HAS_EXCHANGED = RCM_RET_ErrorCode_ERR_WAREHOUSE_ITEM_HAS_EXCHANGED;
  static const ErrorCode ERR_WAREHOUSE_EXCHANGE_ID_ERR = RCM_RET_ErrorCode_ERR_WAREHOUSE_EXCHANGE_ID_ERR;
  static const ErrorCode ERR_QQ_FRIEND_INVITE_NUM_LIMIT = RCM_RET_ErrorCode_ERR_QQ_FRIEND_INVITE_NUM_LIMIT;
  static const ErrorCode ERR_QQ_INVITE_AWARD_NUM_NOT_REACH = RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_NUM_NOT_REACH;
  static const ErrorCode ERR_QQ_INVITE_AWARD_ALREADY_RECEIVED = RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_ALREADY_RECEIVED;
  static const ErrorCode ERR_QQ_INVITE_AWARD_INVITEE_NOT_EXIST = RCM_RET_ErrorCode_ERR_QQ_INVITE_AWARD_INVITEE_NOT_EXIST;
  static const ErrorCode ERR_ZONE_END = RCM_RET_ErrorCode_ERR_ZONE_END;
  static const ErrorCode ERR_MATCH_BEGIN = RCM_RET_ErrorCode_ERR_MATCH_BEGIN;
  static const ErrorCode ERR_MATCH_START_LEVEL_LIMIT = RCM_RET_ErrorCode_ERR_MATCH_START_LEVEL_LIMIT;
  static const ErrorCode ERR_MATCH_START_QUEUE_FULL = RCM_RET_ErrorCode_ERR_MATCH_START_QUEUE_FULL;
  static const ErrorCode ERR_MATCH_START_QUEUED = RCM_RET_ErrorCode_ERR_MATCH_START_QUEUED;
  static const ErrorCode ERR_MATCH_CANCEL_MATCHED = RCM_RET_ErrorCode_ERR_MATCH_CANCEL_MATCHED;
  static const ErrorCode ERR_MATCH_RESULT_TIMEOUT = RCM_RET_ErrorCode_ERR_MATCH_RESULT_TIMEOUT;
  static const ErrorCode ERR_MATCH_START_NOT_BEGIN = RCM_RET_ErrorCode_ERR_MATCH_START_NOT_BEGIN;
  static const ErrorCode ERR_MATCH_END = RCM_RET_ErrorCode_ERR_MATCH_END;
  static const ErrorCode ERR_GUILD_BEGIN = RCM_RET_ErrorCode_ERR_GUILD_BEGIN;
  static const ErrorCode ERR_GUILD_LEVEL_LIMIT = RCM_RET_ErrorCode_ERR_GUILD_LEVEL_LIMIT;
  static const ErrorCode ERR_GUILD_NO_MEDAL = RCM_RET_ErrorCode_ERR_GUILD_NO_MEDAL;
  static const ErrorCode ERR_GUILD_NAME_EXIST = RCM_RET_ErrorCode_ERR_GUILD_NAME_EXIST;
  static const ErrorCode ERR_GUILD_NONEXIST = RCM_RET_ErrorCode_ERR_GUILD_NONEXIST;
  static const ErrorCode ERR_GUILD_FULL = RCM_RET_ErrorCode_ERR_GUILD_FULL;
  static const ErrorCode ERR_GUILD_ALREADY_IN = RCM_RET_ErrorCode_ERR_GUILD_ALREADY_IN;
  static const ErrorCode ERR_GUILD_CANNOT_EXIT = RCM_RET_ErrorCode_ERR_GUILD_CANNOT_EXIT;
  static const ErrorCode ERR_GUILD_NOT_IN = RCM_RET_ErrorCode_ERR_GUILD_NOT_IN;
  static const ErrorCode ERR_GUILD_NO_SUCH_PLAYER = RCM_RET_ErrorCode_ERR_GUILD_NO_SUCH_PLAYER;
  static const ErrorCode ERR_GUILD_TITLE_LIMIT = RCM_RET_ErrorCode_ERR_GUILD_TITLE_LIMIT;
  static const ErrorCode ERR_GUILD_GET_NEW_ID_ERR = RCM_RET_ErrorCode_ERR_GUILD_GET_NEW_ID_ERR;
  static const ErrorCode ERR_GUILD_NO_GUILD_ID = RCM_RET_ErrorCode_ERR_GUILD_NO_GUILD_ID;
  static const ErrorCode ERR_GUILD_GET_INFO_ERR = RCM_RET_ErrorCode_ERR_GUILD_GET_INFO_ERR;
  static const ErrorCode ERR_GUILD_REJECT_TO_JOIN = RCM_RET_ErrorCode_ERR_GUILD_REJECT_TO_JOIN;
  static const ErrorCode ERR_GUILD_SYSTEM_ERR = RCM_RET_ErrorCode_ERR_GUILD_SYSTEM_ERR;
  static const ErrorCode ERR_GUILD_TITLE_TYPE_ERR = RCM_RET_ErrorCode_ERR_GUILD_TITLE_TYPE_ERR;
  static const ErrorCode ERR_GUILD_ACCEPT_TYPE_ERR = RCM_RET_ErrorCode_ERR_GUILD_ACCEPT_TYPE_ERR;
  static const ErrorCode ERR_GUILD_HAS_BEEN_DISSOLVE = RCM_RET_ErrorCode_ERR_GUILD_HAS_BEEN_DISSOLVE;
  static const ErrorCode ERR_GUILD_NO_NAME = RCM_RET_ErrorCode_ERR_GUILD_NO_NAME;
  static const ErrorCode ERR_GUILD_NAME_TOO_LONG = RCM_RET_ErrorCode_ERR_GUILD_NAME_TOO_LONG;
  static const ErrorCode ERR_GUILD_DECLARATION_TOO_LONG = RCM_RET_ErrorCode_ERR_GUILD_DECLARATION_TOO_LONG;
  static const ErrorCode ERR_GUILD_INVITE_ALEADY_EXIST = RCM_RET_ErrorCode_ERR_GUILD_INVITE_ALEADY_EXIST;
  static const ErrorCode ERR_GUILD_INVITE_TOO_MUCH = RCM_RET_ErrorCode_ERR_GUILD_INVITE_TOO_MUCH;
  static const ErrorCode ERR_GUILD_NOT_PROCESSING_TRANSFER = RCM_RET_ErrorCode_ERR_GUILD_NOT_PROCESSING_TRANSFER;
  static const ErrorCode ERR_GUILD_NOT_PROCESSING_DISSOLVE = RCM_RET_ErrorCode_ERR_GUILD_NOT_PROCESSING_DISSOLVE;
  static const ErrorCode ERR_GUILD_OPERATION_ON_CHAIRMAN = RCM_RET_ErrorCode_ERR_GUILD_OPERATION_ON_CHAIRMAN;
  static const ErrorCode ERR_GUILD_ALEADY_IN_APPROVE_LIST = RCM_RET_ErrorCode_ERR_GUILD_ALEADY_IN_APPROVE_LIST;
  static const ErrorCode ERR_GUILD_NOT_IN_INVITE_LIST = RCM_RET_ErrorCode_ERR_GUILD_NOT_IN_INVITE_LIST;
  static const ErrorCode ERR_GUILD_VICE_IS_FULL = RCM_RET_ErrorCode_ERR_GUILD_VICE_IS_FULL;
  static const ErrorCode ERR_GUILD_ELDER_IS_FULL = RCM_RET_ErrorCode_ERR_GUILD_ELDER_IS_FULL;
  static const ErrorCode ERR_GUILD_HAS_BEEN_TRANSFER = RCM_RET_ErrorCode_ERR_GUILD_HAS_BEEN_TRANSFER;
  static const ErrorCode ERR_GUILD_CHAT_ILLEGAL = RCM_RET_ErrorCode_ERR_GUILD_CHAT_ILLEGAL;
  static const ErrorCode ERR_GUILD_NAME_ILLEGAL = RCM_RET_ErrorCode_ERR_GUILD_NAME_ILLEGAL;
  static const ErrorCode ERR_GUILD_DECLARATION_ILLEGAL = RCM_RET_ErrorCode_ERR_GUILD_DECLARATION_ILLEGAL;
  static const ErrorCode ERR_GUILD_ANNOUNCEMENT_ILLEGAL = RCM_RET_ErrorCode_ERR_GUILD_ANNOUNCEMENT_ILLEGAL;
  static const ErrorCode ERR_GUILD_NOT_IN_APPROVE_LIST = RCM_RET_ErrorCode_ERR_GUILD_NOT_IN_APPROVE_LIST;
  static const ErrorCode ERR_GUILD_DATA_INLOAD = RCM_RET_ErrorCode_ERR_GUILD_DATA_INLOAD;
  static const ErrorCode ERR_GUILD_APPROVE_TOO_MUCH = RCM_RET_ErrorCode_ERR_GUILD_APPROVE_TOO_MUCH;
  static const ErrorCode ERR_GUILD_QUIT_IN_HALF_DAY = RCM_RET_ErrorCode_ERR_GUILD_QUIT_IN_HALF_DAY;
  static const ErrorCode ERR_GUILD_END = RCM_RET_ErrorCode_ERR_GUILD_END;
  static const ErrorCode ERR_GAME_BEGIN = RCM_RET_ErrorCode_ERR_GAME_BEGIN;
  static const ErrorCode ERR_GAME_CANT_GET_CARD_SELFKILL = RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_SELFKILL;
  static const ErrorCode ERR_GAME_CANT_GET_CARD_TEAM_SELFKILL = RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_TEAM_SELFKILL;
  static const ErrorCode ERR_GAME_NO_ENOUGH_NPC_GAME_TICK = RCM_RET_ErrorCode_ERR_GAME_NO_ENOUGH_NPC_GAME_TICK;
  static const ErrorCode ERR_GAME_CANT_GET_CARD_NO_MONEY = RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_NO_MONEY;
  static const ErrorCode ERR_GAME_CANT_GET_CARD_SYSTEM_ERR = RCM_RET_ErrorCode_ERR_GAME_CANT_GET_CARD_SYSTEM_ERR;
  static const ErrorCode ERR_GAME_END = RCM_RET_ErrorCode_ERR_GAME_END;
  static inline bool ErrorCode_IsValid(int value) {
    return RCM_RET_ErrorCode_IsValid(value);
  }
  static const ErrorCode ErrorCode_MIN =
    RCM_RET_ErrorCode_ErrorCode_MIN;
  static const ErrorCode ErrorCode_MAX =
    RCM_RET_ErrorCode_ErrorCode_MAX;
  static const int ErrorCode_ARRAYSIZE =
    RCM_RET_ErrorCode_ErrorCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ErrorCode_descriptor() {
    return RCM_RET_ErrorCode_descriptor();
  }
  static inline const ::std::string& ErrorCode_Name(ErrorCode value) {
    return RCM_RET_ErrorCode_Name(value);
  }
  static inline bool ErrorCode_Parse(const ::std::string& name,
      ErrorCode* value) {
    return RCM_RET_ErrorCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rcm.RCM_RET)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_rcm_5ferror_5fcode_2eproto();
  friend void protobuf_AssignDesc_rcm_5ferror_5fcode_2eproto();
  friend void protobuf_ShutdownFile_rcm_5ferror_5fcode_2eproto();

  void InitAsDefaultInstance();
  static RCM_RET* default_instance_;
};
// ===================================================================


// ===================================================================

// RCM_RET


// @@protoc_insertion_point(namespace_scope)

}  // namespace rcm

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rcm::RCM_RET_ErrorCode>() {
  return ::rcm::RCM_RET_ErrorCode_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rcm_5ferror_5fcode_2eproto__INCLUDED
